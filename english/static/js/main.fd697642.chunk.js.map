{"version":3,"sources":["DragDropTouch.js","common/defines.ts","common/utils.ts","pages/index.tsx","components/CompDigit.tsx","common/redux.ts","components/CompEvaluation.tsx","components/CompDigitPanel.tsx","components/CompNumber.tsx","components/CompAddition.tsx","pages/PageMath.tsx","components/CompLetter.tsx","components/CompAlphabet.tsx","components/CompLetterPanel.tsx","components/CompSpeaker.tsx","components/CompRecorder.tsx","components/CompWord.tsx","pages/PageEnglish.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["DragDropTouch","DragDropTouch_1","DataTransfer","this","_dropEffect","_effectAllowed","_data","Object","defineProperty","prototype","get","set","value","enumerable","configurable","keys","clearData","type","getData","setData","setDragImage","img","offsetX","offsetY","ddt","_instance","_imgCustom","_imgOffset","x","y","_lastClick","supportsPassive","document","addEventListener","d","ts","_touchstart","bind","tm","_touchmove","te","_touchend","opt","passive","capture","getInstance","e","_this","_shouldHandle","Date","now","_DBLCLICK","_dispatchEvent","target","preventDefault","_reset","src","_closestDraggable","_dragSource","_ptDown","_getPoint","_lastTouch","setTimeout","_img","_CTXMENU","_ISPRESSHOLDMODE","_pressHoldInterval","_isDragEnabled","_PRESSHOLDAWAIT","_shouldCancelPressHoldMove","_shouldHandleMove","_shouldHandlePressHoldMove","_getTarget","_shouldStartDragging","_createImage","_lastTarget","_moveImage","_isDropZone","_destroyImage","indexOf","defaultPrevented","touches","length","_getDelta","_PRESSHOLDMARGIN","delta","_THRESHOLD","_PRESSHOLDTHRESHOLD","_dataTransfer","clearInterval","page","pageX","clientX","pageY","clientY","p","Math","abs","pt","el","elementFromPoint","getComputedStyle","pointerEvents","parentElement","cloneNode","_copyStyle","style","top","left","rc","getBoundingClientRect","opacity","_OPACITY","toString","body","appendChild","removeChild","requestAnimationFrame","s","position","zIndex","round","_copyProps","dst","props","i","_rmvAtts","forEach","att","removeAttribute","HTMLCanvasElement","cSrc","cDst","width","height","getContext","drawImage","cs","key","children","evt","createEvent","t","initEvent","button","which","buttons","_kbdProps","_ptProps","dataTransfer","dispatchEvent","hasAttribute","draggable","split","Asset","shuffleGenerator","size","pool","Array","map","_","poolRandom","sort","random","pop","min","max","element","validDigit","updateScore","digitElement","check","innerText","background","ondragend","event","panel","createElement","className","replaceWith","valid","Util","CompDigit","digit","onDragStart","onDragEnd","fontFamily","connectDigit","connect","digitPanel","store","targetPanel","state","setState","connectLetter","pickPanel","connectEvaluation","session","results","penalty","finished","newSession","IMAGES","updateResult","index","increment","submit","CompEvaluation","right","paddingRight","textAlign","fontWeight","margin","cursor","backgroundImage","process","backgroundSize","backgroundRepeat","backgroundPosition","onClick","documentElement","requestFullscreen","fontSize","color","backgroundColor","padding","border","mark","reduce","result","ceil","CompDigitPanel","onDragOver","onDrop","React","useMemo","next","CompNumber","mask","number","useRef","repeat","slice","ref","display","justifyContent","isFinite","currentTarget","CompAddition","id","operands","summandFirst","summandSecond","sum","operandFirst","operandSecond","operator","checkResult","current","replace","useEffect","a","update","String","log10","PageMath","useState","refresh","problems","SIZE","MIN","MAX","innerHTML","cloneDigit","flexFlow","CompLetter","letter","CompAlphabet","cloneLetter","CompLetterPanel","CompSpeaker","word","audio","wordIndex","audioEl","sourceEl","play","CompRecorder","recording","setRecording","recorderEl","chunks","blobToBase64","blob","Promise","resolve","reader","FileReader","onload","dataUrl","base64","readAsDataURL","navigator","mediaDevices","getUserMedia","stream","recorder","MediaRecorder","mimeType","ondataavailable","push","data","Blob","fetch","method","headers","JSON","stringify","content","config","enableAutomaticPunctuation","encoding","languageCode","sampleRateHertz","maxAlternatives","res","console","log","onstop","initialize","then","start","stop","CompWord","flexDirection","toUpperCase","PageEnglish","WILD_ANIMALS","ETypes","stack","createStore","currentPage","ENGLISH","Content","previous","MATH","pages","Page","App","Display","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById","URL","href","origin","response","contentType","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.fd697642.chunk.js","sourcesContent":["// @ts-nocheck\r\nvar DragDropTouch;\r\n(function (DragDropTouch_1) {\r\n    'use strict';\r\n    /**\r\n     * Object used to hold the data that is being dragged during drag and drop operations.\r\n     *\r\n     * It may hold one or more data items of different types. For more information about\r\n     * drag and drop operations and data transfer objects, see\r\n     * <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer\">HTML Drag and Drop API</a>.\r\n     *\r\n     * This object is created automatically by the @see:DragDropTouch singleton and is\r\n     * accessible through the @see:dataTransfer property of all drag events.\r\n     */\r\n    var DataTransfer = (function () {\r\n        function DataTransfer() {\r\n            this._dropEffect = 'move';\r\n            this._effectAllowed = 'all';\r\n            this._data = {};\r\n        }\r\n        Object.defineProperty(DataTransfer.prototype, \"dropEffect\", {\r\n            /**\r\n             * Gets or sets the type of drag-and-drop operation currently selected.\r\n             * The value must be 'none',  'copy',  'link', or 'move'.\r\n             */\r\n            get: function () {\r\n                return this._dropEffect;\r\n            },\r\n            set: function (value) {\r\n                this._dropEffect = value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(DataTransfer.prototype, \"effectAllowed\", {\r\n            /**\r\n             * Gets or sets the types of operations that are possible.\r\n             * Must be one of 'none', 'copy', 'copyLink', 'copyMove', 'link',\r\n             * 'linkMove', 'move', 'all' or 'uninitialized'.\r\n             */\r\n            get: function () {\r\n                return this._effectAllowed;\r\n            },\r\n            set: function (value) {\r\n                this._effectAllowed = value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(DataTransfer.prototype, \"types\", {\r\n            /**\r\n             * Gets an array of strings giving the formats that were set in the @see:dragstart event.\r\n             */\r\n            get: function () {\r\n                return Object.keys(this._data);\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * Removes the data associated with a given type.\r\n         *\r\n         * The type argument is optional. If the type is empty or not specified, the data\r\n         * associated with all types is removed. If data for the specified type does not exist,\r\n         * or the data transfer contains no data, this method will have no effect.\r\n         *\r\n         * @param type Type of data to remove.\r\n         */\r\n        DataTransfer.prototype.clearData = function (type) {\r\n            if (type != null) {\r\n                delete this._data[type];\r\n            }\r\n            else {\r\n                this._data = null;\r\n            }\r\n        };\r\n        /**\r\n         * Retrieves the data for a given type, or an empty string if data for that type does\r\n         * not exist or the data transfer contains no data.\r\n         *\r\n         * @param type Type of data to retrieve.\r\n         */\r\n        DataTransfer.prototype.getData = function (type) {\r\n            return this._data[type] || '';\r\n        };\r\n        /**\r\n         * Set the data for a given type.\r\n         *\r\n         * For a list of recommended drag types, please see\r\n         * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Recommended_Drag_Types.\r\n         *\r\n         * @param type Type of data to add.\r\n         * @param value Data to add.\r\n         */\r\n        DataTransfer.prototype.setData = function (type, value) {\r\n            this._data[type] = value;\r\n        };\r\n        /**\r\n         * Set the image to be used for dragging if a custom one is desired.\r\n         *\r\n         * @param img An image element to use as the drag feedback image.\r\n         * @param offsetX The horizontal offset within the image.\r\n         * @param offsetY The vertical offset within the image.\r\n         */\r\n        DataTransfer.prototype.setDragImage = function (img, offsetX, offsetY) {\r\n            var ddt = DragDropTouch._instance;\r\n            ddt._imgCustom = img;\r\n            ddt._imgOffset = { x: offsetX, y: offsetY };\r\n        };\r\n        return DataTransfer;\r\n    }());\r\n    DragDropTouch_1.DataTransfer = DataTransfer;\r\n    /**\r\n     * Defines a class that adds support for touch-based HTML5 drag/drop operations.\r\n     *\r\n     * The @see:DragDropTouch class listens to touch events and raises the\r\n     * appropriate HTML5 drag/drop events as if the events had been caused\r\n     * by mouse actions.\r\n     *\r\n     * The purpose of this class is to enable using existing, standard HTML5\r\n     * drag/drop code on mobile devices running IOS or Android.\r\n     *\r\n     * To use, include the DragDropTouch.js file on the page. The class will\r\n     * automatically start monitoring touch events and will raise the HTML5\r\n     * drag drop events (dragstart, dragenter, dragleave, drop, dragend) which\r\n     * should be handled by the application.\r\n     *\r\n     * For details and examples on HTML drag and drop, see\r\n     * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Drag_operations.\r\n     */\r\n    var DragDropTouch = (function () {\r\n        /**\r\n         * Initializes the single instance of the @see:DragDropTouch class.\r\n         */\r\n        function DragDropTouch() {\r\n            this._lastClick = 0;\r\n            // enforce singleton pattern\r\n            if (DragDropTouch._instance) {\r\n                throw 'DragDropTouch instance already created.';\r\n            }\r\n            // detect passive event support\r\n            // https://github.com/Modernizr/Modernizr/issues/1894\r\n            var supportsPassive = false;\r\n            document.addEventListener('test', function () { }, {\r\n                get passive() {\r\n                    supportsPassive = true;\r\n                    return true;\r\n                }\r\n            });\r\n            // listen to touch events\r\n            if ('ontouchstart' in document) {\r\n                var d = document, ts = this._touchstart.bind(this), tm = this._touchmove.bind(this), te = this._touchend.bind(this), opt = supportsPassive ? { passive: false, capture: false } : false;\r\n                d.addEventListener('touchstart', ts, opt);\r\n                d.addEventListener('touchmove', tm, opt);\r\n                d.addEventListener('touchend', te);\r\n                d.addEventListener('touchcancel', te);\r\n            }\r\n        }\r\n        /**\r\n         * Gets a reference to the @see:DragDropTouch singleton.\r\n         */\r\n        DragDropTouch.getInstance = function () {\r\n            return DragDropTouch._instance;\r\n        };\r\n        // ** event handlers\r\n        DragDropTouch.prototype._touchstart = function (e) {\r\n            var _this = this;\r\n            if (this._shouldHandle(e)) {\r\n                // raise double-click and prevent zooming\r\n                if (Date.now() - this._lastClick < DragDropTouch._DBLCLICK) {\r\n                    if (this._dispatchEvent(e, 'dblclick', e.target)) {\r\n                        e.preventDefault();\r\n                        this._reset();\r\n                        return;\r\n                    }\r\n                }\r\n                // clear all variables\r\n                this._reset();\r\n                // get nearest draggable element\r\n                var src = this._closestDraggable(e.target);\r\n                if (src) {\r\n                    // give caller a chance to handle the hover/move events\r\n                    if (!this._dispatchEvent(e, 'mousemove', e.target) &&\r\n                        !this._dispatchEvent(e, 'mousedown', e.target)) {\r\n                        // get ready to start dragging\r\n                        this._dragSource = src;\r\n                        this._ptDown = this._getPoint(e);\r\n                        this._lastTouch = e;\r\n                        e.preventDefault();\r\n                        // show context menu if the user hasn't started dragging after a while\r\n                        setTimeout(function () {\r\n                            if (_this._dragSource == src && _this._img == null) {\r\n                                if (_this._dispatchEvent(e, 'contextmenu', src)) {\r\n                                    _this._reset();\r\n                                }\r\n                            }\r\n                        }, DragDropTouch._CTXMENU);\r\n                        if (DragDropTouch._ISPRESSHOLDMODE) {\r\n                            this._pressHoldInterval = setTimeout(function () {\r\n                                _this._isDragEnabled = true;\r\n                                _this._touchmove(e);\r\n                            }, DragDropTouch._PRESSHOLDAWAIT);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        DragDropTouch.prototype._touchmove = function (e) {\r\n            if (this._shouldCancelPressHoldMove(e)) {\r\n              this._reset();\r\n              return;\r\n            }\r\n            if (this._shouldHandleMove(e) || this._shouldHandlePressHoldMove(e)) {\r\n                // see if target wants to handle move\r\n                var target = this._getTarget(e);\r\n                if (this._dispatchEvent(e, 'mousemove', target)) {\r\n                    this._lastTouch = e;\r\n                    e.preventDefault();\r\n                    return;\r\n                }\r\n                // start dragging\r\n                if (this._dragSource && !this._img && this._shouldStartDragging(e)) {\r\n                    this._dispatchEvent(e, 'dragstart', this._dragSource);\r\n                    this._createImage(e);\r\n                    this._dispatchEvent(e, 'dragenter', target);\r\n                }\r\n                // continue dragging\r\n                if (this._img) {\r\n                    this._lastTouch = e;\r\n                    e.preventDefault(); // prevent scrolling\r\n                    if (target != this._lastTarget) {\r\n                        this._dispatchEvent(this._lastTouch, 'dragleave', this._lastTarget);\r\n                        this._dispatchEvent(e, 'dragenter', target);\r\n                        this._lastTarget = target;\r\n                    }\r\n                    this._moveImage(e);\r\n                    this._isDropZone = this._dispatchEvent(e, 'dragover', target);\r\n                }\r\n            }\r\n        };\r\n        DragDropTouch.prototype._touchend = function (e) {\r\n            if (this._shouldHandle(e)) {\r\n                // see if target wants to handle up\r\n                if (this._dispatchEvent(this._lastTouch, 'mouseup', e.target)) {\r\n                    e.preventDefault();\r\n                    return;\r\n                }\r\n                // user clicked the element but didn't drag, so clear the source and simulate a click\r\n                if (!this._img) {\r\n                    this._dragSource = null;\r\n                    this._dispatchEvent(this._lastTouch, 'click', e.target);\r\n                    this._lastClick = Date.now();\r\n                }\r\n                // finish dragging\r\n                this._destroyImage();\r\n                if (this._dragSource) {\r\n                    if (e.type.indexOf('cancel') < 0 && this._isDropZone) {\r\n                        this._dispatchEvent(this._lastTouch, 'drop', this._lastTarget);\r\n                    }\r\n                    this._dispatchEvent(this._lastTouch, 'dragend', this._dragSource);\r\n                    this._reset();\r\n                }\r\n            }\r\n        };\r\n        // ** utilities\r\n        // ignore events that have been handled or that involve more than one touch\r\n        DragDropTouch.prototype._shouldHandle = function (e) {\r\n            return e &&\r\n                !e.defaultPrevented &&\r\n                e.touches && e.touches.length < 2;\r\n        };\r\n\r\n        // use regular condition outside of press & hold mode\r\n        DragDropTouch.prototype._shouldHandleMove = function (e) {\r\n          return !DragDropTouch._ISPRESSHOLDMODE && this._shouldHandle(e);\r\n        };\r\n\r\n        // allow to handle moves that involve many touches for press & hold\r\n        DragDropTouch.prototype._shouldHandlePressHoldMove = function (e) {\r\n          return DragDropTouch._ISPRESSHOLDMODE &&\r\n              this._isDragEnabled && e && e.touches && e.touches.length;\r\n        };\r\n\r\n        // reset data if user drags without pressing & holding\r\n        DragDropTouch.prototype._shouldCancelPressHoldMove = function (e) {\r\n          return DragDropTouch._ISPRESSHOLDMODE && !this._isDragEnabled &&\r\n              this._getDelta(e) > DragDropTouch._PRESSHOLDMARGIN;\r\n        };\r\n\r\n        // start dragging when specified delta is detected\r\n        DragDropTouch.prototype._shouldStartDragging = function (e) {\r\n            var delta = this._getDelta(e);\r\n            return delta > DragDropTouch._THRESHOLD ||\r\n                (DragDropTouch._ISPRESSHOLDMODE && delta >= DragDropTouch._PRESSHOLDTHRESHOLD);\r\n        }\r\n\r\n        // clear all members\r\n        DragDropTouch.prototype._reset = function () {\r\n            this._destroyImage();\r\n            this._dragSource = null;\r\n            this._lastTouch = null;\r\n            this._lastTarget = null;\r\n            this._ptDown = null;\r\n            this._isDragEnabled = false;\r\n            this._isDropZone = false;\r\n            this._dataTransfer = new DataTransfer();\r\n            clearInterval(this._pressHoldInterval);\r\n        };\r\n        // get point for a touch event\r\n        DragDropTouch.prototype._getPoint = function (e, page) {\r\n            if (e && e.touches) {\r\n                e = e.touches[0];\r\n            }\r\n            return { x: page ? e.pageX : e.clientX, y: page ? e.pageY : e.clientY };\r\n        };\r\n        // get distance between the current touch event and the first one\r\n        DragDropTouch.prototype._getDelta = function (e) {\r\n            if (DragDropTouch._ISPRESSHOLDMODE && !this._ptDown) { return 0; }\r\n            var p = this._getPoint(e);\r\n            return Math.abs(p.x - this._ptDown.x) + Math.abs(p.y - this._ptDown.y);\r\n        };\r\n        // get the element at a given touch event\r\n        DragDropTouch.prototype._getTarget = function (e) {\r\n            var pt = this._getPoint(e), el = document.elementFromPoint(pt.x, pt.y);\r\n            while (el && getComputedStyle(el).pointerEvents == 'none') {\r\n                el = el.parentElement;\r\n            }\r\n            return el;\r\n        };\r\n        // create drag image from source element\r\n        DragDropTouch.prototype._createImage = function (e) {\r\n            // just in case...\r\n            if (this._img) {\r\n                this._destroyImage();\r\n            }\r\n            // create drag image from custom element or drag source\r\n            var src = this._imgCustom || this._dragSource;\r\n            this._img = src.cloneNode(true);\r\n            this._copyStyle(src, this._img);\r\n            this._img.style.top = this._img.style.left = '-9999px';\r\n            // if creating from drag source, apply offset and opacity\r\n            if (!this._imgCustom) {\r\n                var rc = src.getBoundingClientRect(), pt = this._getPoint(e);\r\n                this._imgOffset = { x: pt.x - rc.left, y: pt.y - rc.top };\r\n                this._img.style.opacity = DragDropTouch._OPACITY.toString();\r\n            }\r\n            // add image to document\r\n            this._moveImage(e);\r\n            document.body.appendChild(this._img);\r\n        };\r\n        // dispose of drag image element\r\n        DragDropTouch.prototype._destroyImage = function () {\r\n            if (this._img && this._img.parentElement) {\r\n                this._img.parentElement.removeChild(this._img);\r\n            }\r\n            this._img = null;\r\n            this._imgCustom = null;\r\n        };\r\n        // move the drag image element\r\n        DragDropTouch.prototype._moveImage = function (e) {\r\n            var _this = this;\r\n            requestAnimationFrame(function () {\r\n                if (_this._img) {\r\n                    var pt = _this._getPoint(e, true), s = _this._img.style;\r\n                    s.position = 'absolute';\r\n                    s.pointerEvents = 'none';\r\n                    s.zIndex = '999999';\r\n                    s.left = Math.round(pt.x - _this._imgOffset.x) + 'px';\r\n                    s.top = Math.round(pt.y - _this._imgOffset.y) + 'px';\r\n                }\r\n            });\r\n        };\r\n        // copy properties from an object to another\r\n        DragDropTouch.prototype._copyProps = function (dst, src, props) {\r\n            for (var i = 0; i < props.length; i++) {\r\n                var p = props[i];\r\n                dst[p] = src[p];\r\n            }\r\n        };\r\n        DragDropTouch.prototype._copyStyle = function (src, dst) {\r\n            // remove potentially troublesome attributes\r\n            DragDropTouch._rmvAtts.forEach(function (att) {\r\n                dst.removeAttribute(att);\r\n            });\r\n            // copy canvas content\r\n            if (src instanceof HTMLCanvasElement) {\r\n                var cSrc = src, cDst = dst;\r\n                cDst.width = cSrc.width;\r\n                cDst.height = cSrc.height;\r\n                cDst.getContext('2d').drawImage(cSrc, 0, 0);\r\n            }\r\n            // copy style (without transitions)\r\n            var cs = getComputedStyle(src);\r\n            for (var i = 0; i < cs.length; i++) {\r\n                var key = cs[i];\r\n                if (key.indexOf('transition') < 0) {\r\n                    dst.style[key] = cs[key];\r\n                }\r\n            }\r\n            dst.style.pointerEvents = 'none';\r\n            // and repeat for all children\r\n            for (var i = 0; i < src.children.length; i++) {\r\n                this._copyStyle(src.children[i], dst.children[i]);\r\n            }\r\n        };\r\n        DragDropTouch.prototype._dispatchEvent = function (e, type, target) {\r\n            if (e && target) {\r\n                var evt = document.createEvent('Event'), t = e.touches ? e.touches[0] : e;\r\n                evt.initEvent(type, true, true);\r\n                evt.button = 0;\r\n                evt.which = evt.buttons = 1;\r\n                this._copyProps(evt, e, DragDropTouch._kbdProps);\r\n                this._copyProps(evt, t, DragDropTouch._ptProps);\r\n                evt.dataTransfer = this._dataTransfer;\r\n                target.dispatchEvent(evt);\r\n                return evt.defaultPrevented;\r\n            }\r\n            return false;\r\n        };\r\n        // gets an element's closest draggable ancestor\r\n        DragDropTouch.prototype._closestDraggable = function (e) {\r\n            for (; e; e = e.parentElement) {\r\n                if (e.hasAttribute('draggable') && e.draggable) {\r\n                    return e;\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        return DragDropTouch;\r\n    }());\r\n    /*private*/ DragDropTouch._instance = new DragDropTouch(); // singleton\r\n    // constants\r\n    DragDropTouch._THRESHOLD = 5; // pixels to move before drag starts\r\n    DragDropTouch._OPACITY = 0.5; // drag image opacity\r\n    DragDropTouch._DBLCLICK = 500; // max ms between clicks in a double click\r\n    DragDropTouch._CTXMENU = 900; // ms to hold before raising 'contextmenu' event\r\n    DragDropTouch._ISPRESSHOLDMODE = false; // decides of press & hold mode presence\r\n    DragDropTouch._PRESSHOLDAWAIT = 400; // ms to wait before press & hold is detected\r\n    DragDropTouch._PRESSHOLDMARGIN = 25; // pixels that finger might shiver while pressing\r\n    DragDropTouch._PRESSHOLDTHRESHOLD = 0; // pixels to move before drag starts\r\n    // copy styles/attributes from drag source to drag image element\r\n    DragDropTouch._rmvAtts = 'id,class,style,draggable'.split(',');\r\n    // synthesize and dispatch an event\r\n    // returns true if the event has been handled (e.preventDefault == true)\r\n    DragDropTouch._kbdProps = 'altKey,ctrlKey,metaKey,shiftKey'.split(',');\r\n    DragDropTouch._ptProps = 'pageX,pageY,clientX,clientY,screenX,screenY'.split(',');\r\n    DragDropTouch_1.DragDropTouch = DragDropTouch;\r\n})(DragDropTouch || (DragDropTouch = {}));\r\n","export namespace Asset {\r\n  export const IMAGES = [\r\n    'character-0.png',\r\n    'character-1.svg',\r\n    'character-2.svg',\r\n    'character-3.svg',\r\n    'character-4.svg',\r\n    'character-5.png',\r\n    'character-6.png',\r\n    'character-7.png',\r\n    'character-8.jpg',\r\n    'character-9.png',\r\n    'character-10.png',\r\n    'character-11.png',\r\n    'character-12.png',\r\n    'character-13.png',\r\n    'character-14.png',\r\n    'character-15.png',\r\n    'character-16.png',\r\n    'character-17.png',\r\n    'character-18.png',\r\n    'character-19.png',\r\n    'character-20.png',\r\n    'character-21.png',\r\n    'character-22.png',\r\n    'character-23.png',\r\n    'character-24.png',\r\n    'character-25.png',\r\n    'character-26.png',\r\n    'character-27.svg',\r\n    'character-28.png',\r\n    'character-29.png',\r\n    'character-30.png',\r\n    'character-31.png',\r\n    'character-32.png',\r\n  ];\r\n\r\n  export const WILD_ANIMALS = [\r\n    'alligator',\r\n    'antelope',\r\n    'bear',\r\n    'camel',\r\n    'chimpanzee',\r\n    'coyote',\r\n    'crab',\r\n    'crocodile',\r\n    'dolphin',\r\n    'elephant',\r\n    'giraffe',\r\n    'gorilla',\r\n    'jellyfish',\r\n    'koala',\r\n    'leopard',\r\n    'lion',\r\n    'monkey',\r\n    'owl',\r\n    'panda',\r\n    'raccoon',\r\n    'shark',\r\n    'starfishes',\r\n    'walrus',\r\n    'wolf',\r\n    'woodpecker',\r\n    'zebra',\r\n    'badger',\r\n    'bat',\r\n    'deer',\r\n    'elk',\r\n    'fox',\r\n    'frog',\r\n    'hare',\r\n    'hedgehog',\r\n    // 'hippopotamus',\r\n    'kangaroo',\r\n    'lizard',\r\n    'mole',\r\n    'otter',\r\n    'rabbit',\r\n    'rat',\r\n    'reindeer',\r\n    'snake',\r\n    'squirrel',\r\n    'toad',\r\n  ];\r\n\r\n  export const SIZE = 20;\r\n  export const MIN = 10;\r\n  export const MAX = 100;\r\n}\r\n","export namespace Util {\r\n  export function* shuffleGenerator(size: number) {\r\n    const pool = [...Array(size)].map((_, i) => i);\r\n    let poolRandom: number[] = [];\r\n    while (true) {\r\n      if (poolRandom.length === 0) {\r\n        poolRandom = [...pool].sort(() => Math.random() - 0.5);\r\n      }\r\n      yield poolRandom.pop();\r\n    }\r\n  }\r\n\r\n  export const random = (min: number, max: number) => ~~(Math.random() * (max - min)) + min;\r\n\r\n  export const cloneDigit = (element: any, validDigit: string, updateScore: any) => {\r\n    const digitElement = element.cloneNode(true);\r\n    const check = digitElement.innerText === validDigit;\r\n    digitElement.style.background = check ? 'green' : 'red';\r\n    digitElement.ondragend = (event: any) => {\r\n      const panel = document.createElement('div');\r\n      panel.className = 'digit-panel';\r\n      event.target.replaceWith(panel);\r\n    };\r\n    updateScore(~~check - 1);\r\n    return digitElement;\r\n  };\r\n\r\n  export const cloneLetter = (element: any, valid: string, updateScore: any) => {\r\n    const digitElement = element.cloneNode(true);\r\n    const check = digitElement.innerText === valid;\r\n    digitElement.style.background = check ? 'green' : 'red';\r\n    digitElement.ondragend = (event: any) => {\r\n      const panel = document.createElement('div');\r\n      panel.className = 'letter-panel';\r\n      event.target.replaceWith(panel);\r\n    };\r\n    updateScore(~~check - 1);\r\n    return digitElement;\r\n  };\r\n}\r\n","import React from 'react';\r\nimport createStore from 'redux-zero';\r\nimport { Provider, connect } from 'redux-zero/react';\r\nimport { Asset } from '../common/defines';\r\nimport { Util } from '../common/utils';\r\nimport { PageMath } from './PageMath';\r\nimport { PageEnglish } from './PageEnglish';\r\nimport './index.scss';\r\nimport './fonts.scss';\r\n\r\nexport interface IPageProps extends React.SVGProps<SVGSVGElement> {\r\n  push: any;\r\n  pop: any;\r\n}\r\n\r\nexport namespace Page {\r\n  export enum ETypes {\r\n    MATH,\r\n    ENGLISH,\r\n  }\r\n\r\n  const pages = (props: any) => ({\r\n    [ETypes.MATH]: <PageMath key=\"PageMath\" {...props} />,\r\n    [ETypes.ENGLISH]: <PageEnglish key=\"PageEnglish\" {...props} />,\r\n  });\r\n  const stack: ETypes[] = [];\r\n  const store = createStore({\r\n    currentPage: ETypes.ENGLISH,\r\n    results: [],\r\n    penalty: 0,\r\n    finished: false,\r\n    random: Util.shuffleGenerator(Asset.IMAGES.length),\r\n  });\r\n\r\n  const mapToProps = ({ currentPage }: any) => ({ currentPage });\r\n  const actions = (store: any, props: any) => ({\r\n    push: ({ currentPage }: any, next: ETypes) => {\r\n      stack.push(currentPage);\r\n      store.setState({ currentPage: next });\r\n    },\r\n    pop: (state: any) => {\r\n      const previous = stack.pop();\r\n      store.setState({ currentPage: previous });\r\n    },\r\n  });\r\n  const Content = connect(mapToProps, actions)((props: any) => pages(props)[props.currentPage as ETypes]);\r\n\r\n  export const Display: any = () => (\r\n    <Provider store={store}>\r\n      <Content />\r\n    </Provider>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\ninterface ICompDigitProps extends React.SVGProps<SVGSVGElement> {\r\n  digit: number;\r\n  draggable: boolean;\r\n  onDragStart?: any;\r\n  onDragEnd?: any;\r\n}\r\n\r\nexport const CompDigit: React.FC<ICompDigitProps> = ({ digit, draggable, onDragStart, onDragEnd, ...props }) => {\r\n  return (\r\n    <div\r\n      draggable={draggable}\r\n      onDragStart={onDragStart}\r\n      onDragEnd={onDragEnd}\r\n      className=\"digit\"\r\n      style={{\r\n        fontFamily: 'FineCollege',\r\n      }}\r\n    >\r\n      {digit}\r\n    </div>\r\n  );\r\n};\r\n","import { connect } from 'redux-zero/react';\r\nimport { Util } from '../common/utils';\r\nimport { Asset } from '../common/defines';\r\n\r\nexport const connectDigit = connect(\r\n  ({ digitPanel }: any) => ({ digitPanel }),\r\n  (store: any, props: any) => ({\r\n    targetPanel: (state: any, digitPanel: any) => {\r\n      store.setState({ digitPanel });\r\n    },\r\n  })\r\n);\r\n\r\nexport const connectLetter = connect(\r\n  ({ panel }: any) => ({ panel }),\r\n  (store: any, props: any) => ({\r\n    pickPanel: (state: any, panel: any) => {\r\n      store.setState({ panel });\r\n    },\r\n  })\r\n);\r\n\r\nexport const connectEvaluation = connect(\r\n  ({ session, random, results, penalty, finished }: any) => ({ session, random, results, penalty, finished }),\r\n  (store: any, props: any) => ({\r\n    newSession: (state: any) =>\r\n      store.setState({\r\n        session: Math.random(),\r\n        penalty: 0,\r\n        finished: false,\r\n        random: Util.shuffleGenerator(Asset.IMAGES.length),\r\n      }),\r\n    updateResult: ({ results }: any, index: number, value: boolean) => {\r\n      results[index] = value;\r\n      store.setState({ results });\r\n    },\r\n    updateScore: ({ penalty }: any, increment: number) => {\r\n      store.setState({ penalty: penalty + increment });\r\n    },\r\n    submit: ({ penalty }: any, increment: number) => {\r\n      store.setState({ penalty: penalty + increment, finished: true });\r\n    },\r\n  })\r\n);\r\n","import React from 'react';\r\nimport { connectEvaluation } from '../common/redux';\r\n\r\ninterface ICompEvaluationProps extends React.SVGProps<SVGSVGElement> {\r\n  finished: boolean;\r\n  results: any;\r\n  penalty: any;\r\n  newSession: any;\r\n  submit: any;\r\n}\r\n\r\nconst FC: React.FC<ICompEvaluationProps> = (props) => {\r\n  const { results, penalty, newSession, finished, submit } = props;\r\n  return (\r\n    <div\r\n      style={{\r\n        position: 'fixed',\r\n        top: 200,\r\n        right: 0,\r\n        width: 180,\r\n        paddingRight: 40,\r\n        textAlign: 'center',\r\n        zIndex: 999,\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          fontWeight: 'bold',\r\n          margin: 16,\r\n          cursor: 'pointer',\r\n          height: 96,\r\n          backgroundImage: `url(${process.env.PUBLIC_URL}/reset.png)`,\r\n          backgroundSize: 'contain',\r\n          backgroundRepeat: 'no-repeat',\r\n          backgroundPosition: 'center',\r\n        }}\r\n        onClick={() => {\r\n          (document.documentElement as Element).requestFullscreen();\r\n          newSession();\r\n        }}\r\n      />\r\n\r\n      <div\r\n        style={{\r\n          fontFamily: 'SaucerBB',\r\n          fontSize: 80,\r\n          color: finished ? 'red' : 'grey',\r\n        }}\r\n      >\r\n        {100 + penalty}\r\n      </div>\r\n      <div\r\n        style={{\r\n          fontWeight: 'bold',\r\n          backgroundColor: 'yellow',\r\n          padding: 4,\r\n          border: '2px solid blue',\r\n          cursor: 'pointer',\r\n          pointerEvents: finished ? 'none' : 'auto',\r\n        }}\r\n        onClick={() => {\r\n          const mark = results.reduce((mark: number, result: boolean) => {\r\n            return mark + (100 / results.length) * ~~result;\r\n          }, 0);\r\n          submit(Math.ceil(mark) - 100);\r\n        }}\r\n      >\r\n        SUBMIT\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const CompEvaluation = connectEvaluation(FC);\r\n","import React from 'react';\r\nimport { Util } from '../common/utils';\r\nimport { Asset } from '../common/defines';\r\nimport { connectEvaluation } from '../common/redux';\r\n\r\ninterface ICompDigitPanelProps extends React.SVGProps<SVGSVGElement> {\r\n  session: number;\r\n  random: any;\r\n  onDragOver: any;\r\n  onDrop: any;\r\n}\r\n\r\nconst FC: React.FC<ICompDigitPanelProps> = ({ session, random, onDragOver, onDrop, ...props }) => {\r\n  const background = React.useMemo(() => Asset.IMAGES[random.next().value], [session]);\r\n  return (\r\n    <div onDragOver={onDragOver} onDrop={onDrop}>\r\n      <div\r\n        className=\"digit-panel\"\r\n        style={{\r\n          backgroundImage: `url(${process.env.PUBLIC_URL}/images/${background})`,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const CompDigitPanel = connectEvaluation(FC);\r\n","import React from 'react';\r\nimport { connectDigit } from '../common/redux';\r\nimport { CompDigit } from './CompDigit';\r\nimport { CompDigitPanel } from './CompDigitPanel';\r\n\r\ninterface ICompOperandProps extends React.SVGProps<SVGSVGElement> {\r\n  value: string;\r\n  mask?: string;\r\n  targetPanel: any;\r\n}\r\n\r\nconst FC: React.FC<ICompOperandProps> = ({ value, mask = value, targetPanel, ...props }) => {\r\n  const number = React.useRef<HTMLDivElement>(null);\r\n  value = ('x'.repeat(mask.length) + value).slice(-mask.length);\r\n  // console.log({ value, mask });\r\n\r\n  return (\r\n    <div ref={number} style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n      {[...mask].map((digit, i) =>\r\n        isFinite(+digit) ? (\r\n          <CompDigit key={i} digit={+digit} draggable={false} />\r\n        ) : (\r\n          <CompDigitPanel\r\n            key={i}\r\n            onDragOver={(event: any) => event.preventDefault()}\r\n            onDrop={(event: any) =>\r\n              targetPanel({\r\n                validDigit: value[i],\r\n                panel: event.currentTarget,\r\n              })\r\n            }\r\n          />\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const CompNumber = connectDigit(FC);\r\n","import React from 'react';\r\nimport { connectEvaluation } from '../common/redux';\r\nimport { CompNumber } from './CompNumber';\r\n\r\ninterface ICompAdditionProps extends React.SVGProps<SVGSVGElement> {\r\n  operands: number[];\r\n  finished: boolean;\r\n  updateResult: any;\r\n}\r\n\r\nconst FC: React.FC<ICompAdditionProps> = ({ id, operands, finished, updateResult, ...props }) => {\r\n  const summandFirst = React.useRef<HTMLDivElement>(null);\r\n  const summandSecond = React.useRef<HTMLDivElement>(null);\r\n  const sum = React.useRef<HTMLDivElement>(null);\r\n  const [operandFirst, operandSecond] = operands;\r\n\r\n  const { operator, result } = React.useMemo(() => {\r\n    const operator = operandFirst > operandSecond ? '-' : '+';\r\n    const result = {\r\n      '+': operandFirst + operandSecond,\r\n      '-': operandFirst - operandSecond,\r\n    }[operator];\r\n    return { operator, result };\r\n  }, []);\r\n  const checkResult = sum.current ? +sum.current?.innerText.replace(/\\s/g, '') === result : true;\r\n\r\n  React.useEffect(() => {\r\n    async function update() {\r\n      updateResult(id, checkResult);\r\n    }\r\n    update();\r\n  });\r\n\r\n  return (\r\n    <div className=\"calculation\" style={{ background: finished && !checkResult ? 'orchid' : 'transparent' }}>\r\n      <div ref={summandFirst}>\r\n        <CompNumber value={String(operandFirst)} />\r\n      </div>\r\n      <div className=\"operator\">\r\n        {operator}\r\n        {/* + */}\r\n        {/* - */}\r\n        {/* &#x00d7; */}\r\n      </div>\r\n      <div ref={summandSecond}>\r\n        <CompNumber value={String(operandSecond)} />\r\n      </div>\r\n      <div\r\n        style={{\r\n          width: '100%',\r\n          height: 10,\r\n          background: '#0051f5',\r\n          color: 'transparent',\r\n          margin: '16px 0px',\r\n        }}\r\n      >\r\n        ==\r\n      </div>\r\n      <div ref={sum}>\r\n        <CompNumber value={String(result)} mask={'x'.repeat(Math.ceil(Math.log10(Math.max(...operands))) + 1)} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const CompAddition = connectEvaluation(FC);\r\n","import React, { SVGProps, useState, useEffect } from 'react';\r\nimport { connect } from 'redux-zero/react';\r\nimport Draggable from 'react-draggable';\r\nimport { IPageProps } from '.';\r\nimport { CompDigit } from '../components/CompDigit';\r\nimport { CompEvaluation } from '../components/CompEvaluation';\r\nimport { CompAddition } from '../components/CompAddition';\r\nimport { connectDigit, connectEvaluation } from '../common/redux';\r\nimport { Util } from '../common/utils';\r\nimport { Asset } from '../common/defines';\r\nimport logo from './draggable_4.svg';\r\n\r\ninterface IPageMathProps extends IPageProps {\r\n  finished: boolean;\r\n  session: number;\r\n  digitPanel: any;\r\n  targetPanel: any;\r\n  updateScore: any;\r\n}\r\n\r\nconst FC: React.FC<IPageMathProps> = (props) => {\r\n  const [_, refresh] = React.useState(0);\r\n  const { finished, session, digitPanel, targetPanel, updateScore } = props;\r\n  const problems = React.useMemo(\r\n    () => [...Array(Asset.SIZE)].map(() => [Util.random(Asset.MIN, Asset.MAX), Util.random(Asset.MIN, Asset.MAX)]),\r\n    [session]\r\n  );\r\n\r\n  return (\r\n    <div key={session}>\r\n      {/* <object data={logo} /> */}\r\n      <div style={{ display: 'flex', position: 'fixed', backgroundColor: 'transparent', zIndex: 999 }}>\r\n        {[...Array(10)].map((_, i) => (\r\n          <CompDigit\r\n            key={i}\r\n            digit={i}\r\n            draggable={!finished}\r\n            onDragStart={(event: any) => targetPanel(null)}\r\n            onDragEnd={(event: any) => {\r\n              if (digitPanel) {\r\n                const { validDigit, panel } = digitPanel;\r\n                panel.innerHTML = '';\r\n                panel.appendChild(Util.cloneDigit(event.target, validDigit, updateScore));\r\n                refresh(Math.random());\r\n              }\r\n            }}\r\n          />\r\n        ))}\r\n      </div>\r\n      <CompEvaluation />\r\n      <div className=\"content-panel\">\r\n        <div style={{ display: 'flex', flexFlow: 'wrap', backgroundColor: 'linen' }}>\r\n          {problems.map((operands, i) => (\r\n            <CompAddition key={i} id={String(i)} operands={operands} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const PageMath = connectEvaluation(connectDigit(FC));\r\n","import React from 'react';\r\n\r\ninterface ICompDigitProps extends React.SVGProps<SVGSVGElement> {\r\n  letter: string;\r\n  draggable: boolean;\r\n  onDragStart?: any;\r\n  onDragEnd?: any;\r\n}\r\n\r\nexport const CompLetter: React.FC<ICompDigitProps> = ({ letter, draggable, onDragStart, onDragEnd, ...props }) => {\r\n  return (\r\n    <div draggable={draggable} onDragStart={onDragStart} onDragEnd={onDragEnd} className=\"letter\">\r\n      {letter}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { connectLetter, connectEvaluation } from '../common/redux';\r\nimport { Util } from '../common/utils';\r\nimport { CompLetter } from './CompLetter';\r\n\r\ninterface ICompAlphabetProps extends React.SVGProps<SVGSVGElement> {\r\n  finished: boolean;\r\n  panel: any;\r\n  pickPanel: any;\r\n  updateScore: any;\r\n}\r\n\r\nconst FC: React.FC<ICompAlphabetProps> = ({ finished, panel, pickPanel, updateScore }) => {\r\n  return (\r\n    <div style={{ display: 'flex', flexFlow: 'wrap', position: 'fixed', backgroundColor: 'transparent', zIndex: 999 }}>\r\n      {[...'ABCDEFGHIJKLMNOPQRSTUVWXYZ'].map((i) => (\r\n        <CompLetter\r\n          key={i}\r\n          letter={i}\r\n          draggable={!finished}\r\n          onDragStart={(event: any) => pickPanel(null)}\r\n          onDragEnd={(event: any) => {\r\n            if (panel) {\r\n              panel.innerHTML = '';\r\n              panel.appendChild(Util.cloneLetter(event.target, panel.valid, updateScore));\r\n            }\r\n          }}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const CompAlphabet = connectEvaluation(connectLetter(FC));\r\n","import React from 'react';\r\nimport { Util } from '../common/utils';\r\nimport { Asset } from '../common/defines';\r\nimport { connectEvaluation } from '../common/redux';\r\n\r\ninterface ICompLetterPanelProps extends React.SVGProps<SVGSVGElement> {\r\n  session: number;\r\n  random: any;\r\n  onDragOver: any;\r\n  onDrop: any;\r\n}\r\n\r\nconst FC: React.FC<ICompLetterPanelProps> = ({ session, random, onDragOver, onDrop, ...props }) => {\r\n  const background = React.useMemo(() => Asset.IMAGES[random.next().value], [session]);\r\n  return (\r\n    <div onDragOver={onDragOver} onDrop={onDrop}>\r\n      <div\r\n        className=\"letter-panel\"\r\n        style={{\r\n          backgroundImage: `url(${process.env.PUBLIC_URL}/images/${background})`,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const CompLetterPanel = connectEvaluation(FC);\r\n","import React from 'react';\r\nimport { connectEvaluation } from '../common/redux';\r\n\r\ninterface ICompSpeakerProps extends React.SVGProps<SVGSVGElement> {\r\n  word: string;\r\n}\r\n\r\nexport const CompSpeaker: React.FC<ICompSpeakerProps> = (props) => {\r\n  const { word } = props;\r\n  const audio = React.useMemo(() => {\r\n    const wordIndex = `${word}${'_'.repeat(word.length)}`;\r\n    const audioEl = document.createElement('audio');\r\n    const sourceEl = document.createElement('source');\r\n    sourceEl.src =\r\n      `https://www.oxfordlearnersdictionaries.com/media/american_english/us_pron/` +\r\n      `/${wordIndex.slice(0, 1)}` +\r\n      `/${wordIndex.slice(0, 3)}` +\r\n      `/${wordIndex.slice(0, 5)}` +\r\n      `/${word}__us_1.mp3`;\r\n    sourceEl.type = 'audio/mpeg';\r\n    audioEl.appendChild(sourceEl);\r\n    return audioEl;\r\n  }, [word]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: 180,\r\n        textAlign: 'center',\r\n        zIndex: 999,\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          fontWeight: 'bold',\r\n          margin: 16,\r\n          cursor: 'pointer',\r\n          height: 96,\r\n          backgroundImage: `url(${process.env.PUBLIC_URL}/speaker.png)`,\r\n          backgroundSize: 'contain',\r\n          backgroundRepeat: 'no-repeat',\r\n          backgroundPosition: 'center',\r\n        }}\r\n        onClick={() => audio.play()}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { connectEvaluation } from '../common/redux';\r\n\r\ndeclare var MediaRecorder: any;\r\ninterface ICompRecorderProps extends React.SVGProps<SVGSVGElement> {\r\n  word: string;\r\n}\r\n\r\nexport const CompRecorder: React.FC<ICompRecorderProps> = (props) => {\r\n  const [recording, setRecording] = React.useState(false);\r\n  const { word } = props;\r\n  const recorderEl = React.useMemo(() => {\r\n    async function initialize() {\r\n      const chunks: any[] = [];\r\n\r\n      const blobToBase64 = async (blob: any): Promise<string> =>\r\n        new Promise((resolve) => {\r\n          var reader = new FileReader();\r\n          reader.onload = function () {\r\n            var dataUrl = reader.result as string;\r\n            var [_, base64] = dataUrl?.split(',');\r\n            resolve(base64);\r\n          };\r\n          reader.readAsDataURL(blob);\r\n        });\r\n\r\n      const stream: MediaStream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n      const recorder = new MediaRecorder(stream, { mimeType: 'video/webm; codecs=vp9' });\r\n      recorder.ondataavailable = async (e: any) => {\r\n        chunks.push(e.data);\r\n        if (recorder.state === 'inactive') {\r\n          try {\r\n            const blob = new Blob(chunks, { type: 'audio/webm' });\r\n            // audioEl.src = URL.createObjectURL(blob);\r\n            // audioEl.play();\r\n\r\n            const data = await blobToBase64(blob);\r\n            // console.log({ chunks, data });\r\n            const res = await fetch('https://speech.googleapis.com/v1/speech:recognize', {\r\n              method: 'POST',\r\n              headers: {\r\n                'Content-Type': 'application/json',\r\n                key: 'AIzaSyAWEriX0ahrPBMHozN9zCfqxuyCwxVBFhs',\r\n              },\r\n              body: JSON.stringify({\r\n                audio: {\r\n                  content: data,\r\n                },\r\n                config: {\r\n                  enableAutomaticPunctuation: false,\r\n                  encoding: 'LINEAR16',\r\n                  languageCode: 'en-US',\r\n                  sampleRateHertz: 16000,\r\n                  maxAlternatives: 30,\r\n                },\r\n              }),\r\n            });\r\n            console.log({ res });\r\n          } catch (error) {\r\n            console.log(error);\r\n          }\r\n        }\r\n      };\r\n      recorder.onstop = () => (chunks.length = 0);\r\n      return recorder;\r\n    }\r\n    const audioEl = document.createElement('audio');\r\n    // const sourceEl = document.createElement('source');\r\n    // sourceEl.type = 'audio/webm';\r\n    // audioEl.appendChild(sourceEl);\r\n    return initialize();\r\n  }, [word]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: 180,\r\n        textAlign: 'center',\r\n        zIndex: 999,\r\n      }}\r\n    >\r\n      <div\r\n        className=\"button\"\r\n        style={{\r\n          backgroundImage: `url(${process.env.PUBLIC_URL}/${recording ? 'recording' : 'recorder'}.png)`,\r\n        }}\r\n        onClick={() =>\r\n          recorderEl.then((recorder) => {\r\n            setRecording(recorder.start() || true);\r\n            setTimeout(() => setRecording(recorder.stop() || false), 2000);\r\n          })\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { connectLetter, connectEvaluation } from '../common/redux';\r\nimport { CompLetterPanel } from './CompLetterPanel';\r\nimport { CompSpeaker } from './CompSpeaker';\r\nimport { CompRecorder } from './CompRecorder';\r\n\r\ninterface ICompWordProps extends React.SVGProps<SVGSVGElement> {\r\n  word: string;\r\n  pickPanel: any;\r\n}\r\n\r\nconst FC: React.FC<ICompWordProps> = ({ word, pickPanel }) => {\r\n  return (\r\n    <div className=\"word\">\r\n      <div style={{ display: 'flex' }}>\r\n        <div\r\n          className=\"word-picture\"\r\n          style={{\r\n            backgroundImage: `url(${process.env.PUBLIC_URL}/wild-animals/${word}-150x150.png)`,\r\n          }}\r\n        />\r\n        <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n          <CompSpeaker word={word} />\r\n          <CompRecorder word={word} />\r\n        </div>\r\n      </div>\r\n      <div className=\"word-panel\">\r\n        {[...word.toUpperCase()].map((letter, i) => (\r\n          <CompLetterPanel\r\n            key={i}\r\n            onDragOver={(event: any) => event.preventDefault()}\r\n            onDrop={(event: any) => {\r\n              const panel = event.currentTarget;\r\n              panel.valid = letter;\r\n              pickPanel(panel);\r\n            }}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const CompWord = connectEvaluation(connectLetter(FC));\r\n","import React, { SVGProps, useState, useEffect } from 'react';\r\nimport { connect } from 'redux-zero/react';\r\nimport Draggable from 'react-draggable';\r\nimport { IPageProps } from '.';\r\nimport { CompLetter } from '../components/CompLetter';\r\nimport { CompAlphabet } from '../components/CompAlphabet';\r\nimport { CompWord } from '../components/CompWord';\r\nimport { CompEvaluation } from '../components/CompEvaluation';\r\nimport { CompAddition } from '../components/CompAddition';\r\nimport { connectDigit, connectEvaluation } from '../common/redux';\r\nimport { Util } from '../common/utils';\r\nimport { Asset } from '../common/defines';\r\nimport logo from './draggable_4.svg';\r\n\r\ninterface IPageEnglishProps extends IPageProps {\r\n  finished: boolean;\r\n  session: number;\r\n  digitPanel: any;\r\n  targetPanel: any;\r\n  updateScore: any;\r\n}\r\n\r\nconst FC: React.FC<IPageEnglishProps> = (props) => {\r\n  const [_, refresh] = React.useState(0);\r\n  const { finished, session, digitPanel, targetPanel, updateScore } = props;\r\n  const word = React.useMemo(() => Asset.WILD_ANIMALS[Util.random(0, Asset.WILD_ANIMALS.length)], [session]);\r\n  return (\r\n    <div key={session}>\r\n      <CompAlphabet />\r\n      <CompEvaluation />\r\n      <CompWord word={word} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const PageEnglish = connectEvaluation(connectDigit(FC));\r\n","import { Page } from './pages';\nimport './App.css';\n\nfunction App() {\n  return <Page.Display />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './DragDropTouch';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}