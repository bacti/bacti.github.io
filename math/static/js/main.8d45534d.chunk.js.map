{"version":3,"sources":["proto/asset_pb.js","proto/asset_pb_service.js","DragDropTouch.js","common/utils.ts","common/defines.ts","common/asset.ts","common/redux.ts","common/tracking.ts","pages/index.tsx","pages/PageLoading.tsx","components/CompLetter.tsx","components/CompAlphabet.tsx","components/CompLetterPanel.tsx","pages/PageProfile.tsx","components/CompDigit.tsx","components/CompEvaluation.tsx","components/CompDigitPanel.tsx","components/CompNumber.tsx","components/CompOperand.tsx","components/CompAddition.tsx","components/CompMultiplication.tsx","pages/PageCalculation.tsx","components/CompSpeaker.tsx","components/CompRecorder.tsx","components/CompWord.tsx","pages/PageEnglish.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["jspb","require","goog","global","Function","exportSymbol","proto","AssetRequest","opt_data","Message","initialize","this","inherits","DEBUG","COMPILED","displayName","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","obj","name","getName","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","getFieldNumber","value","readString","setName","skipField","serializeBinaryToWriter","message","writer","serializeBinary","BinaryWriter","getResultBuffer","f","length","writeString","cloneMessage","getFieldProto3","setField","AssetResponse","data","getData_asB64","readBytes","setData","getData_asU8","writeBytes","getData","bytesAsB64","bytesAsU8","object","extend","exports","proto_asset_pb","grpc","asset","serviceName","assetClient","serviceHost","options","fetch","methodName","service","requestStream","responseStream","requestType","responseType","requestMessage","metadata","callback","arguments","client","unary","request","host","transport","debug","onEnd","response","status","Code","OK","err","Error","statusMessage","code","trailers","cancel","close","DragDropTouch","DragDropTouch_1","DataTransfer","_dropEffect","_effectAllowed","_data","Object","defineProperty","get","set","enumerable","configurable","keys","clearData","type","setDragImage","img","offsetX","offsetY","ddt","_instance","_imgCustom","_imgOffset","x","y","_lastClick","supportsPassive","document","addEventListener","d","ts","_touchstart","bind","tm","_touchmove","te","_touchend","opt","passive","capture","getInstance","e","_this","_shouldHandle","Date","now","_DBLCLICK","_dispatchEvent","target","preventDefault","_reset","src","_closestDraggable","_dragSource","_ptDown","_getPoint","_lastTouch","setTimeout","_img","_CTXMENU","_ISPRESSHOLDMODE","_pressHoldInterval","_isDragEnabled","_PRESSHOLDAWAIT","_shouldCancelPressHoldMove","_shouldHandleMove","_shouldHandlePressHoldMove","_getTarget","_shouldStartDragging","_createImage","_lastTarget","_moveImage","_isDropZone","_destroyImage","indexOf","defaultPrevented","touches","_getDelta","_PRESSHOLDMARGIN","delta","_THRESHOLD","_PRESSHOLDTHRESHOLD","_dataTransfer","clearInterval","page","pageX","clientX","pageY","clientY","p","Math","abs","pt","el","elementFromPoint","getComputedStyle","pointerEvents","parentElement","cloneNode","_copyStyle","style","top","left","rc","getBoundingClientRect","opacity","_OPACITY","toString","body","appendChild","removeChild","requestAnimationFrame","s","position","zIndex","round","_copyProps","dst","props","i","_rmvAtts","forEach","att","removeAttribute","HTMLCanvasElement","cSrc","cDst","width","height","getContext","drawImage","cs","key","children","evt","createEvent","t","initEvent","button","which","buttons","_kbdProps","_ptProps","dataTransfer","dispatchEvent","hasAttribute","draggable","split","IMAGES","WILD_ANIMALS","shuffleGenerator","log","window","performance","toFixed","String","console","warn","logdiv","getElementById","innerText","element","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","apply","size","pool","Array","map","_","poolRandom","sort","random","pop","min","max","validDigit","updateScore","digitElement","check","background","ondragend","event","panel","createElement","className","replaceWith","valid","Util","connectDigit","connect","digitPanel","store","selectPanel","state","setState","targetPanel","connectLetter","pickPanel","connectEvaluation","session","results","penalty","timer","finished","newSession","updateTimer","updateResult","index","increment","submit","URL","webkitURL","TYPES","svg","POOL","uri","a","match","extention","Promise","resolve","JSZip","loadAsync","zip","file","async","buffer","createObjectURL","Blob","Asset","ETypes","amplitude","init","storage","localStorage","anoId","uuid","v4","setUserId","user","getItem","logEvent","Tracking","PageLoading","push","React","useMemo","IMPRESSION","FONTS","family","source","all","FontFace","font","load","fonts","add","then","ENGAGEMENT","loading","Page","PROFILE","catch","backgroundColor","CompLetter","letter","onDragStart","onDragEnd","CompAlphabet","innerHTML","cloneLetter","display","flexFlow","CompLetterPanel","onDragOver","onDrop","useState","setAsset","next","backgroundImage","PageProfile","username","setUsername","currentUser","formatter","text","letters","join","replace","trim","useEffect","CALCULATION","paddingTop","currentTarget","fontSize","fontWeight","margin","padding","border","cursor","onClick","setItem","toLowerCase","CompDigit","digit","CompEvaluation","evaluation","ceil","reduce","mark","result","right","paddingRight","textAlign","backgroundSize","backgroundRepeat","backgroundPosition","REFRESH","score","playing","fontFamily","color","SUBMIT","CompDigitPanel","CompNumber","mask","number","useRef","repeat","slice","ref","justifyContent","isFinite","CompOperand","id","operand","refresh","borderColor","valueText","RegExp","CompAddition","operands","operandFirst","operandSecond","operator","maxdigit","trail","ndigit","operandize","CompMultiplication","factors","product","factor","Number","PageCalculation","problems","offset","multiply","problem","CompSpeaker","word","audio","wordIndex","audioEl","sourceEl","process","play","CompRecorder","recording","setRecording","recorderEl","chunks","blobToBase64","blob","FileReader","onload","dataUrl","base64","readAsDataURL","navigator","mediaDevices","getUserMedia","stream","recorder","MediaRecorder","ondataavailable","method","headers","JSON","stringify","content","config","enableAutomaticPunctuation","encoding","languageCode","sampleRateHertz","maxAlternatives","res","onstop","start","stop","CompWord","flexDirection","toUpperCase","PageEnglish","stack","createStore","currentPage","LOADING","Content","previous","ENGLISH","pages","App","Display","Boolean","location","hostname","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.8d45534d.chunk.js","sourcesContent":["/**\n * @fileoverview\n * @enhanceable\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.AssetRequest', null, global);\ngoog.exportSymbol('proto.AssetResponse', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.AssetRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.AssetRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.AssetRequest.displayName = 'proto.AssetRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.AssetRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.AssetRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.AssetRequest} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.AssetRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    name: msg.getName()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.AssetRequest}\n */\nproto.AssetRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.AssetRequest;\n  return proto.AssetRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.AssetRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.AssetRequest}\n */\nproto.AssetRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.AssetRequest} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.AssetRequest.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.AssetRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.AssetRequest.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.AssetRequest} The clone.\n */\nproto.AssetRequest.prototype.cloneMessage = function() {\n  return /** @type {!proto.AssetRequest} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string name = 1;\n * @return {string}\n */\nproto.AssetRequest.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.AssetRequest.prototype.setName = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.AssetResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.AssetResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.AssetResponse.displayName = 'proto.AssetResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.AssetResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.AssetResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.AssetResponse} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.AssetResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    data: msg.getData_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.AssetResponse}\n */\nproto.AssetResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.AssetResponse;\n  return proto.AssetResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.AssetResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.AssetResponse}\n */\nproto.AssetResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setData(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.AssetResponse} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.AssetResponse.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.AssetResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.AssetResponse.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getData_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.AssetResponse} The clone.\n */\nproto.AssetResponse.prototype.cloneMessage = function() {\n  return /** @type {!proto.AssetResponse} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional bytes data = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.AssetResponse.prototype.getData = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes data = 1;\n * This is a type-conversion wrapper around `getData()`\n * @return {string}\n */\nproto.AssetResponse.prototype.getData_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getData()));\n};\n\n\n/**\n * optional bytes data = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getData()`\n * @return {!Uint8Array}\n */\nproto.AssetResponse.prototype.getData_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getData()));\n};\n\n\n/** @param {!(string|Uint8Array)} value  */\nproto.AssetResponse.prototype.setData = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\ngoog.object.extend(exports, proto);\n","// package: \n// file: proto/asset.proto\n\nvar proto_asset_pb = require(\"../proto/asset_pb\");\nvar grpc = require(\"@improbable-eng/grpc-web\").grpc;\n\nvar asset = (function () {\n  function asset() {}\n  asset.serviceName = \"asset\";\n  return asset;\n}());\n\nasset.fetch = {\n  methodName: \"fetch\",\n  service: asset,\n  requestStream: false,\n  responseStream: false,\n  requestType: proto_asset_pb.AssetRequest,\n  responseType: proto_asset_pb.AssetResponse\n};\n\nexports.asset = asset;\n\nfunction assetClient(serviceHost, options) {\n  this.serviceHost = serviceHost;\n  this.options = options || {};\n}\n\nassetClient.prototype.fetch = function fetch(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(asset.fetch, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nexports.assetClient = assetClient;\n\n","// @ts-nocheck\r\nvar DragDropTouch;\r\n(function (DragDropTouch_1) {\r\n    'use strict';\r\n    /**\r\n     * Object used to hold the data that is being dragged during drag and drop operations.\r\n     *\r\n     * It may hold one or more data items of different types. For more information about\r\n     * drag and drop operations and data transfer objects, see\r\n     * <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer\">HTML Drag and Drop API</a>.\r\n     *\r\n     * This object is created automatically by the @see:DragDropTouch singleton and is\r\n     * accessible through the @see:dataTransfer property of all drag events.\r\n     */\r\n    var DataTransfer = (function () {\r\n        function DataTransfer() {\r\n            this._dropEffect = 'move';\r\n            this._effectAllowed = 'all';\r\n            this._data = {};\r\n        }\r\n        Object.defineProperty(DataTransfer.prototype, \"dropEffect\", {\r\n            /**\r\n             * Gets or sets the type of drag-and-drop operation currently selected.\r\n             * The value must be 'none',  'copy',  'link', or 'move'.\r\n             */\r\n            get: function () {\r\n                return this._dropEffect;\r\n            },\r\n            set: function (value) {\r\n                this._dropEffect = value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(DataTransfer.prototype, \"effectAllowed\", {\r\n            /**\r\n             * Gets or sets the types of operations that are possible.\r\n             * Must be one of 'none', 'copy', 'copyLink', 'copyMove', 'link',\r\n             * 'linkMove', 'move', 'all' or 'uninitialized'.\r\n             */\r\n            get: function () {\r\n                return this._effectAllowed;\r\n            },\r\n            set: function (value) {\r\n                this._effectAllowed = value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(DataTransfer.prototype, \"types\", {\r\n            /**\r\n             * Gets an array of strings giving the formats that were set in the @see:dragstart event.\r\n             */\r\n            get: function () {\r\n                return Object.keys(this._data);\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * Removes the data associated with a given type.\r\n         *\r\n         * The type argument is optional. If the type is empty or not specified, the data\r\n         * associated with all types is removed. If data for the specified type does not exist,\r\n         * or the data transfer contains no data, this method will have no effect.\r\n         *\r\n         * @param type Type of data to remove.\r\n         */\r\n        DataTransfer.prototype.clearData = function (type) {\r\n            if (type != null) {\r\n                delete this._data[type];\r\n            }\r\n            else {\r\n                this._data = null;\r\n            }\r\n        };\r\n        /**\r\n         * Retrieves the data for a given type, or an empty string if data for that type does\r\n         * not exist or the data transfer contains no data.\r\n         *\r\n         * @param type Type of data to retrieve.\r\n         */\r\n        DataTransfer.prototype.getData = function (type) {\r\n            return this._data[type] || '';\r\n        };\r\n        /**\r\n         * Set the data for a given type.\r\n         *\r\n         * For a list of recommended drag types, please see\r\n         * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Recommended_Drag_Types.\r\n         *\r\n         * @param type Type of data to add.\r\n         * @param value Data to add.\r\n         */\r\n        DataTransfer.prototype.setData = function (type, value) {\r\n            this._data[type] = value;\r\n        };\r\n        /**\r\n         * Set the image to be used for dragging if a custom one is desired.\r\n         *\r\n         * @param img An image element to use as the drag feedback image.\r\n         * @param offsetX The horizontal offset within the image.\r\n         * @param offsetY The vertical offset within the image.\r\n         */\r\n        DataTransfer.prototype.setDragImage = function (img, offsetX, offsetY) {\r\n            var ddt = DragDropTouch._instance;\r\n            ddt._imgCustom = img;\r\n            ddt._imgOffset = { x: offsetX, y: offsetY };\r\n        };\r\n        return DataTransfer;\r\n    }());\r\n    DragDropTouch_1.DataTransfer = DataTransfer;\r\n    /**\r\n     * Defines a class that adds support for touch-based HTML5 drag/drop operations.\r\n     *\r\n     * The @see:DragDropTouch class listens to touch events and raises the\r\n     * appropriate HTML5 drag/drop events as if the events had been caused\r\n     * by mouse actions.\r\n     *\r\n     * The purpose of this class is to enable using existing, standard HTML5\r\n     * drag/drop code on mobile devices running IOS or Android.\r\n     *\r\n     * To use, include the DragDropTouch.js file on the page. The class will\r\n     * automatically start monitoring touch events and will raise the HTML5\r\n     * drag drop events (dragstart, dragenter, dragleave, drop, dragend) which\r\n     * should be handled by the application.\r\n     *\r\n     * For details and examples on HTML drag and drop, see\r\n     * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Drag_operations.\r\n     */\r\n    var DragDropTouch = (function () {\r\n        /**\r\n         * Initializes the single instance of the @see:DragDropTouch class.\r\n         */\r\n        function DragDropTouch() {\r\n            this._lastClick = 0;\r\n            // enforce singleton pattern\r\n            if (DragDropTouch._instance) {\r\n                throw 'DragDropTouch instance already created.';\r\n            }\r\n            // detect passive event support\r\n            // https://github.com/Modernizr/Modernizr/issues/1894\r\n            var supportsPassive = false;\r\n            document.addEventListener('test', function () { }, {\r\n                get passive() {\r\n                    supportsPassive = true;\r\n                    return true;\r\n                }\r\n            });\r\n            // listen to touch events\r\n            if ('ontouchstart' in document) {\r\n                var d = document, ts = this._touchstart.bind(this), tm = this._touchmove.bind(this), te = this._touchend.bind(this), opt = supportsPassive ? { passive: false, capture: false } : false;\r\n                d.addEventListener('touchstart', ts, opt);\r\n                d.addEventListener('touchmove', tm, opt);\r\n                d.addEventListener('touchend', te);\r\n                d.addEventListener('touchcancel', te);\r\n            }\r\n        }\r\n        /**\r\n         * Gets a reference to the @see:DragDropTouch singleton.\r\n         */\r\n        DragDropTouch.getInstance = function () {\r\n            return DragDropTouch._instance;\r\n        };\r\n        // ** event handlers\r\n        DragDropTouch.prototype._touchstart = function (e) {\r\n            var _this = this;\r\n            if (this._shouldHandle(e)) {\r\n                // raise double-click and prevent zooming\r\n                if (Date.now() - this._lastClick < DragDropTouch._DBLCLICK) {\r\n                    if (this._dispatchEvent(e, 'dblclick', e.target)) {\r\n                        e.preventDefault();\r\n                        this._reset();\r\n                        return;\r\n                    }\r\n                }\r\n                // clear all variables\r\n                this._reset();\r\n                // get nearest draggable element\r\n                var src = this._closestDraggable(e.target);\r\n                if (src) {\r\n                    // give caller a chance to handle the hover/move events\r\n                    if (!this._dispatchEvent(e, 'mousemove', e.target) &&\r\n                        !this._dispatchEvent(e, 'mousedown', e.target)) {\r\n                        // get ready to start dragging\r\n                        this._dragSource = src;\r\n                        this._ptDown = this._getPoint(e);\r\n                        this._lastTouch = e;\r\n                        e.preventDefault();\r\n                        // show context menu if the user hasn't started dragging after a while\r\n                        setTimeout(function () {\r\n                            if (_this._dragSource == src && _this._img == null) {\r\n                                if (_this._dispatchEvent(e, 'contextmenu', src)) {\r\n                                    _this._reset();\r\n                                }\r\n                            }\r\n                        }, DragDropTouch._CTXMENU);\r\n                        if (DragDropTouch._ISPRESSHOLDMODE) {\r\n                            this._pressHoldInterval = setTimeout(function () {\r\n                                _this._isDragEnabled = true;\r\n                                _this._touchmove(e);\r\n                            }, DragDropTouch._PRESSHOLDAWAIT);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        DragDropTouch.prototype._touchmove = function (e) {\r\n            if (this._shouldCancelPressHoldMove(e)) {\r\n              this._reset();\r\n              return;\r\n            }\r\n            if (this._shouldHandleMove(e) || this._shouldHandlePressHoldMove(e)) {\r\n                // see if target wants to handle move\r\n                var target = this._getTarget(e);\r\n                if (this._dispatchEvent(e, 'mousemove', target)) {\r\n                    this._lastTouch = e;\r\n                    e.preventDefault();\r\n                    return;\r\n                }\r\n                // start dragging\r\n                if (this._dragSource && !this._img && this._shouldStartDragging(e)) {\r\n                    this._dispatchEvent(e, 'dragstart', this._dragSource);\r\n                    this._createImage(e);\r\n                    this._dispatchEvent(e, 'dragenter', target);\r\n                }\r\n                // continue dragging\r\n                if (this._img) {\r\n                    this._lastTouch = e;\r\n                    e.preventDefault(); // prevent scrolling\r\n                    if (target != this._lastTarget) {\r\n                        this._dispatchEvent(this._lastTouch, 'dragleave', this._lastTarget);\r\n                        this._dispatchEvent(e, 'dragenter', target);\r\n                        this._lastTarget = target;\r\n                    }\r\n                    this._moveImage(e);\r\n                    this._isDropZone = this._dispatchEvent(e, 'dragover', target);\r\n                }\r\n            }\r\n        };\r\n        DragDropTouch.prototype._touchend = function (e) {\r\n            if (this._shouldHandle(e)) {\r\n                // see if target wants to handle up\r\n                if (this._dispatchEvent(this._lastTouch, 'mouseup', e.target)) {\r\n                    e.preventDefault();\r\n                    return;\r\n                }\r\n                // user clicked the element but didn't drag, so clear the source and simulate a click\r\n                if (!this._img) {\r\n                    this._dragSource = null;\r\n                    this._dispatchEvent(this._lastTouch, 'click', e.target);\r\n                    this._lastClick = Date.now();\r\n                }\r\n                // finish dragging\r\n                this._destroyImage();\r\n                if (this._dragSource) {\r\n                    if (e.type.indexOf('cancel') < 0 && this._isDropZone) {\r\n                        this._dispatchEvent(this._lastTouch, 'drop', this._lastTarget);\r\n                    }\r\n                    this._dispatchEvent(this._lastTouch, 'dragend', this._dragSource);\r\n                    this._reset();\r\n                }\r\n            }\r\n        };\r\n        // ** utilities\r\n        // ignore events that have been handled or that involve more than one touch\r\n        DragDropTouch.prototype._shouldHandle = function (e) {\r\n            return e &&\r\n                !e.defaultPrevented &&\r\n                e.touches && e.touches.length < 2;\r\n        };\r\n\r\n        // use regular condition outside of press & hold mode\r\n        DragDropTouch.prototype._shouldHandleMove = function (e) {\r\n          return !DragDropTouch._ISPRESSHOLDMODE && this._shouldHandle(e);\r\n        };\r\n\r\n        // allow to handle moves that involve many touches for press & hold\r\n        DragDropTouch.prototype._shouldHandlePressHoldMove = function (e) {\r\n          return DragDropTouch._ISPRESSHOLDMODE &&\r\n              this._isDragEnabled && e && e.touches && e.touches.length;\r\n        };\r\n\r\n        // reset data if user drags without pressing & holding\r\n        DragDropTouch.prototype._shouldCancelPressHoldMove = function (e) {\r\n          return DragDropTouch._ISPRESSHOLDMODE && !this._isDragEnabled &&\r\n              this._getDelta(e) > DragDropTouch._PRESSHOLDMARGIN;\r\n        };\r\n\r\n        // start dragging when specified delta is detected\r\n        DragDropTouch.prototype._shouldStartDragging = function (e) {\r\n            var delta = this._getDelta(e);\r\n            return delta > DragDropTouch._THRESHOLD ||\r\n                (DragDropTouch._ISPRESSHOLDMODE && delta >= DragDropTouch._PRESSHOLDTHRESHOLD);\r\n        }\r\n\r\n        // clear all members\r\n        DragDropTouch.prototype._reset = function () {\r\n            this._destroyImage();\r\n            this._dragSource = null;\r\n            this._lastTouch = null;\r\n            this._lastTarget = null;\r\n            this._ptDown = null;\r\n            this._isDragEnabled = false;\r\n            this._isDropZone = false;\r\n            this._dataTransfer = new DataTransfer();\r\n            clearInterval(this._pressHoldInterval);\r\n        };\r\n        // get point for a touch event\r\n        DragDropTouch.prototype._getPoint = function (e, page) {\r\n            if (e && e.touches) {\r\n                e = e.touches[0];\r\n            }\r\n            return { x: page ? e.pageX : e.clientX, y: page ? e.pageY : e.clientY };\r\n        };\r\n        // get distance between the current touch event and the first one\r\n        DragDropTouch.prototype._getDelta = function (e) {\r\n            if (DragDropTouch._ISPRESSHOLDMODE && !this._ptDown) { return 0; }\r\n            var p = this._getPoint(e);\r\n            return Math.abs(p.x - this._ptDown.x) + Math.abs(p.y - this._ptDown.y);\r\n        };\r\n        // get the element at a given touch event\r\n        DragDropTouch.prototype._getTarget = function (e) {\r\n            var pt = this._getPoint(e), el = document.elementFromPoint(pt.x, pt.y);\r\n            while (el && getComputedStyle(el).pointerEvents == 'none') {\r\n                el = el.parentElement;\r\n            }\r\n            return el;\r\n        };\r\n        // create drag image from source element\r\n        DragDropTouch.prototype._createImage = function (e) {\r\n            // just in case...\r\n            if (this._img) {\r\n                this._destroyImage();\r\n            }\r\n            // create drag image from custom element or drag source\r\n            var src = this._imgCustom || this._dragSource;\r\n            this._img = src.cloneNode(true);\r\n            this._copyStyle(src, this._img);\r\n            this._img.style.top = this._img.style.left = '-9999px';\r\n            // if creating from drag source, apply offset and opacity\r\n            if (!this._imgCustom) {\r\n                var rc = src.getBoundingClientRect(), pt = this._getPoint(e);\r\n                this._imgOffset = { x: pt.x - rc.left, y: pt.y - rc.top };\r\n                this._img.style.opacity = DragDropTouch._OPACITY.toString();\r\n            }\r\n            // add image to document\r\n            this._moveImage(e);\r\n            document.body.appendChild(this._img);\r\n        };\r\n        // dispose of drag image element\r\n        DragDropTouch.prototype._destroyImage = function () {\r\n            if (this._img && this._img.parentElement) {\r\n                this._img.parentElement.removeChild(this._img);\r\n            }\r\n            this._img = null;\r\n            this._imgCustom = null;\r\n        };\r\n        // move the drag image element\r\n        DragDropTouch.prototype._moveImage = function (e) {\r\n            var _this = this;\r\n            requestAnimationFrame(function () {\r\n                if (_this._img) {\r\n                    var pt = _this._getPoint(e, true), s = _this._img.style;\r\n                    s.position = 'absolute';\r\n                    s.pointerEvents = 'none';\r\n                    s.zIndex = '999999';\r\n                    s.left = Math.round(pt.x - _this._imgOffset.x) + 'px';\r\n                    s.top = Math.round(pt.y - _this._imgOffset.y) + 'px';\r\n                }\r\n            });\r\n        };\r\n        // copy properties from an object to another\r\n        DragDropTouch.prototype._copyProps = function (dst, src, props) {\r\n            for (var i = 0; i < props.length; i++) {\r\n                var p = props[i];\r\n                dst[p] = src[p];\r\n            }\r\n        };\r\n        DragDropTouch.prototype._copyStyle = function (src, dst) {\r\n            // remove potentially troublesome attributes\r\n            DragDropTouch._rmvAtts.forEach(function (att) {\r\n                dst.removeAttribute(att);\r\n            });\r\n            // copy canvas content\r\n            if (src instanceof HTMLCanvasElement) {\r\n                var cSrc = src, cDst = dst;\r\n                cDst.width = cSrc.width;\r\n                cDst.height = cSrc.height;\r\n                cDst.getContext('2d').drawImage(cSrc, 0, 0);\r\n            }\r\n            // copy style (without transitions)\r\n            var cs = getComputedStyle(src);\r\n            for (var i = 0; i < cs.length; i++) {\r\n                var key = cs[i];\r\n                if (key.indexOf('transition') < 0) {\r\n                    dst.style[key] = cs[key];\r\n                }\r\n            }\r\n            dst.style.pointerEvents = 'none';\r\n            // and repeat for all children\r\n            for (var i = 0; i < src.children.length; i++) {\r\n                this._copyStyle(src.children[i], dst.children[i]);\r\n            }\r\n        };\r\n        DragDropTouch.prototype._dispatchEvent = function (e, type, target) {\r\n            if (e && target) {\r\n                var evt = document.createEvent('Event'), t = e.touches ? e.touches[0] : e;\r\n                evt.initEvent(type, true, true);\r\n                evt.button = 0;\r\n                evt.which = evt.buttons = 1;\r\n                this._copyProps(evt, e, DragDropTouch._kbdProps);\r\n                this._copyProps(evt, t, DragDropTouch._ptProps);\r\n                evt.dataTransfer = this._dataTransfer;\r\n                target.dispatchEvent(evt);\r\n                return evt.defaultPrevented;\r\n            }\r\n            return false;\r\n        };\r\n        // gets an element's closest draggable ancestor\r\n        DragDropTouch.prototype._closestDraggable = function (e) {\r\n            for (; e; e = e.parentElement) {\r\n                if (e.hasAttribute('draggable') && e.draggable) {\r\n                    return e;\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        return DragDropTouch;\r\n    }());\r\n    /*private*/ DragDropTouch._instance = new DragDropTouch(); // singleton\r\n    // constants\r\n    DragDropTouch._THRESHOLD = 5; // pixels to move before drag starts\r\n    DragDropTouch._OPACITY = 0.5; // drag image opacity\r\n    DragDropTouch._DBLCLICK = 500; // max ms between clicks in a double click\r\n    DragDropTouch._CTXMENU = 900; // ms to hold before raising 'contextmenu' event\r\n    DragDropTouch._ISPRESSHOLDMODE = false; // decides of press & hold mode presence\r\n    DragDropTouch._PRESSHOLDAWAIT = 400; // ms to wait before press & hold is detected\r\n    DragDropTouch._PRESSHOLDMARGIN = 25; // pixels that finger might shiver while pressing\r\n    DragDropTouch._PRESSHOLDTHRESHOLD = 0; // pixels to move before drag starts\r\n    // copy styles/attributes from drag source to drag image element\r\n    DragDropTouch._rmvAtts = 'id,class,style,draggable'.split(',');\r\n    // synthesize and dispatch an event\r\n    // returns true if the event has been handled (e.preventDefault == true)\r\n    DragDropTouch._kbdProps = 'altKey,ctrlKey,metaKey,shiftKey'.split(',');\r\n    DragDropTouch._ptProps = 'pageX,pageY,clientX,clientY,screenX,screenY'.split(',');\r\n    DragDropTouch_1.DragDropTouch = DragDropTouch;\r\n})(DragDropTouch || (DragDropTouch = {}));\r\n","export namespace Util {\r\n  export const trace = (message: any) => {\r\n    const log = `${(window.performance.now() / 1000).toFixed(3)}: ${String(message)}\\n`;\r\n    console.warn(log);\r\n    const logdiv = document.getElementById('log');\r\n    logdiv && (logdiv.innerText = log + logdiv.innerText);\r\n  };\r\n\r\n  export const requestFullscreen = (element: any) => {\r\n    const request =\r\n      element.requestFullscreen ||\r\n      element.webkitRequestFullscreen ||\r\n      element.mozRequestFullScreen ||\r\n      element.msRequestFullscreen;\r\n    request && request.apply(element);\r\n  };\r\n\r\n  export function* shuffleGenerator(size: number) {\r\n    const pool = [...Array(size)].map((_, i) => i);\r\n    let poolRandom: number[] = [];\r\n    while (true) {\r\n      if (poolRandom.length === 0) {\r\n        poolRandom = [...pool].sort(() => Math.random() - 0.5);\r\n      }\r\n      yield poolRandom.pop();\r\n    }\r\n  }\r\n\r\n  export const random = (min: number, max: number) => ~~(Math.random() * (max - min)) + min;\r\n\r\n  export const cloneDigit = (element: any, validDigit: string, updateScore: any) => {\r\n    const digitElement = element.cloneNode(true);\r\n    const check = digitElement.innerText === validDigit;\r\n    digitElement.style.background = check ? 'green' : 'red';\r\n    digitElement.ondragend = (event: any) => {\r\n      const panel = document.createElement('div');\r\n      panel.className = 'digit-panel';\r\n      event.target.replaceWith(panel);\r\n    };\r\n    updateScore(~~check - 1);\r\n    return digitElement;\r\n  };\r\n\r\n  export const cloneLetter = (element: any, valid: string, updateScore: any) => {\r\n    const digitElement = element.cloneNode(true);\r\n    const check = digitElement.innerText === valid;\r\n    digitElement.style.background = check ? 'green' : 'red';\r\n    digitElement.ondragend = (event: any) => {\r\n      const panel = document.createElement('div');\r\n      panel.className = 'letter-panel';\r\n      event.target.replaceWith(panel);\r\n    };\r\n    updateScore(~~check - 1);\r\n    return digitElement;\r\n  };\r\n}\r\n","export const IMAGES = [\r\n  'character-0.png',\r\n  'character-1.svg',\r\n  'character-2.svg',\r\n  'character-3.svg',\r\n  'character-4.svg',\r\n  'character-5.png',\r\n  'character-6.png',\r\n  'character-7.png',\r\n  'character-8.png',\r\n  'character-9.png',\r\n  'character-10.png',\r\n  'character-11.png',\r\n  'character-12.png',\r\n  'character-13.png',\r\n  'character-14.png',\r\n  'character-15.png',\r\n  'character-16.png',\r\n  'character-17.png',\r\n  'character-18.png',\r\n  'character-19.png',\r\n  'character-20.png',\r\n  'character-21.png',\r\n  'character-22.png',\r\n  'character-23.png',\r\n  'character-24.png',\r\n  'character-25.png',\r\n  'character-26.png',\r\n  'character-27.svg',\r\n  'character-28.png',\r\n  'character-29.png',\r\n  'character-30.png',\r\n  'character-31.png',\r\n  'character-32.png',\r\n  'character-33.png',\r\n  'character-34.png',\r\n  'character-35.png',\r\n  'character-36.png',\r\n  'tamako-nobi.png',\r\n  'tamako-nobi-2.png',\r\n  'nobisuke-nobi.png',\r\n  'edmond-elephant.png',\r\n  'suzy-sheep.png',\r\n  'chloe-pig.png',\r\n  'alexander-pig.png',\r\n  'candy-cat.png',\r\n  'danny-dog.png',\r\n  'rebecca-rabbit.png',\r\n  'richard-rabbit.png',\r\n  'miss-rabbit.png',\r\n  'zoe-zebra.png',\r\n  'pedro-horse.png',\r\n  'madame-gazelle.png',\r\n  'eiichirou-senjou.png',\r\n  'hodol-choe.png',\r\n  'jaiko-gouda.png',\r\n  'michiko-minamoto.png',\r\n  'mr-kaminari.png',\r\n  'mrs-gouda.png',\r\n  'mrs-honekawa.png',\r\n  'nanhyang-gim.png',\r\n  'granny-dog.png',\r\n  'mummy-dog.png',\r\n  'captain-daddy-dog.png',\r\n  'grampy-rabbit.png',\r\n  'daddy-rabbit.png',\r\n  'gabriella-goat.png',\r\n];\r\n\r\nexport const WILD_ANIMALS = [\r\n  'alligator',\r\n  'antelope',\r\n  'bear',\r\n  'camel',\r\n  'chimpanzee',\r\n  'coyote',\r\n  'crab',\r\n  'crocodile',\r\n  'dolphin',\r\n  'elephant',\r\n  'giraffe',\r\n  'gorilla',\r\n  'jellyfish',\r\n  'koala',\r\n  'leopard',\r\n  'lion',\r\n  'monkey',\r\n  'owl',\r\n  'panda',\r\n  'raccoon',\r\n  'shark',\r\n  'starfishes',\r\n  'walrus',\r\n  'wolf',\r\n  'woodpecker',\r\n  'zebra',\r\n  'badger',\r\n  'bat',\r\n  'deer',\r\n  'elk',\r\n  'fox',\r\n  'frog',\r\n  'hare',\r\n  'hedgehog',\r\n  // 'hippopotamus',\r\n  'kangaroo',\r\n  'lizard',\r\n  'mole',\r\n  'otter',\r\n  'rabbit',\r\n  'rat',\r\n  'reindeer',\r\n  'snake',\r\n  'squirrel',\r\n  'toad',\r\n];\r\n\r\nexport const SIZE = 20;\r\nexport const MIN = 10;\r\nexport const MAX = 100;\r\nexport const MULTIPLY = 2;\r\n","import JSZip from 'jszip';\r\nimport { grpc } from '@improbable-eng/grpc-web';\r\nimport { asset } from '../proto/asset_pb_service';\r\nimport { AssetRequest } from '../proto/asset_pb';\r\n\r\nexport namespace Asset {\r\n  const HOST = 'https://bacti.tk:8080';\r\n  const URL = window.URL || window.webkitURL;\r\n  const TYPES: any = {\r\n    svg: 'image/svg+xml',\r\n  };\r\n  const POOL: any = {};\r\n\r\n  export const fetch = async (uri: string): Promise<string | null> => {\r\n    const [_, extention] = uri.match(/\\.(\\w+)$/i) || [];\r\n    const type = TYPES[extention];\r\n\r\n    if (POOL[uri]) {\r\n      return POOL[uri];\r\n    }\r\n    const request = new AssetRequest();\r\n    request.setName(uri);\r\n\r\n    const data: Uint8Array = await new Promise((resolve) =>\r\n      grpc.unary(asset.fetch, {\r\n        request,\r\n        host: HOST,\r\n        onEnd: ({ message, status }: any) => resolve(status ? null : message.getData()),\r\n      })\r\n    );\r\n    if (data == null) return null;\r\n\r\n    const zip = await JSZip.loadAsync(data);\r\n    const buffer: any = await zip.file(uri)?.async('arraybuffer');\r\n    POOL[uri] = URL.createObjectURL(new Blob([buffer], { type }));\r\n    return POOL[uri];\r\n  };\r\n}\r\n","import { connect } from 'redux-zero/react';\r\nimport { Util } from '../common/utils';\r\nimport { IMAGES } from '../common/defines';\r\n\r\nexport const connectDigit = connect(\r\n  ({ panel, digitPanel }: any) => ({ panel, digitPanel }),\r\n  (store: any, props: any) => ({\r\n    selectPanel: (state: any, panel: any) => store.setState({ panel }),\r\n    targetPanel: (state: any, digitPanel: any) => {\r\n      store.setState({ digitPanel });\r\n    },\r\n  })\r\n);\r\n\r\nexport const connectLetter = connect(\r\n  ({ panel }: any) => ({ panel }),\r\n  (store: any, props: any) => ({\r\n    pickPanel: (state: any, panel: any) => {\r\n      store.setState({ panel });\r\n    },\r\n  })\r\n);\r\n\r\nexport const connectEvaluation = connect(\r\n  ({ session, random, results, penalty, timer, finished }: any) => ({\r\n    session,\r\n    random,\r\n    results,\r\n    penalty,\r\n    timer,\r\n    finished,\r\n  }),\r\n  (store: any, props: any) => ({\r\n    newSession: (state: any) =>\r\n      store.setState({\r\n        session: Math.random(),\r\n        penalty: 0,\r\n        finished: false,\r\n        random: Util.shuffleGenerator(IMAGES.length),\r\n      }),\r\n    updateTimer: (state: any) => store.setState({ timer: Date.now() }),\r\n    updateResult: ({ results }: any, index: number, value: boolean) => {\r\n      results[index] = value;\r\n      store.setState({ results });\r\n    },\r\n    updateScore: ({ penalty }: any, increment: number) => {\r\n      store.setState({ penalty: penalty + increment });\r\n    },\r\n    submit: ({ penalty }: any, increment: number) => {\r\n      store.setState({ penalty: penalty + increment, finished: true });\r\n    },\r\n  })\r\n);\r\n","import amplitude from 'amplitude-js';\r\nimport uuid from 'uuid';\r\n\r\nexport namespace Tracking {\r\n  export enum ETypes {\r\n    IMPRESSION = 'IMPRESSION',\r\n    ENGAGEMENT = 'ENGAGEMENT',\r\n    SUBMIT = 'SUBMIT',\r\n    REFRESH = 'REFRESH',\r\n  }\r\n\r\n  interface ITrackingEvent {\r\n    event: string;\r\n    loading?: number;\r\n    playing?: number;\r\n    score?: number;\r\n  }\r\n\r\n  const API_KEY = 'e9d181173175fa90e6140967d58d18e0';\r\n  const client = amplitude.getInstance();\r\n  client.init(API_KEY);\r\n\r\n  const storage: any = window.localStorage || {};\r\n  storage.anoId = storage.anoId || uuid.v4();\r\n  client.setUserId(`ano:${storage.anoId}`);\r\n\r\n  export const logEvent = ({ event, ...data }: ITrackingEvent) => {\r\n    const user = window.localStorage.getItem('username');\r\n    client.logEvent(event, { ...data, user });\r\n  };\r\n}\r\n","import React from 'react';\r\nimport createStore from 'redux-zero';\r\nimport { Provider, connect } from 'redux-zero/react';\r\nimport { IMAGES } from '../common/defines';\r\nimport { Util } from '../common/utils';\r\nimport { PageLoading } from './PageLoading';\r\nimport { PageProfile } from './PageProfile';\r\nimport { PageCalculation } from './PageCalculation';\r\nimport { PageEnglish } from './PageEnglish';\r\nimport './index.scss';\r\nimport './fonts.scss';\r\n\r\nexport interface IPageProps extends React.SVGProps<SVGSVGElement> {\r\n  push: any;\r\n  pop: any;\r\n}\r\n\r\nexport namespace Page {\r\n  export enum ETypes {\r\n    LOADING,\r\n    PROFILE,\r\n    CALCULATION,\r\n    ENGLISH,\r\n  }\r\n\r\n  const pages = (props: any) => ({\r\n    [ETypes.LOADING]: <PageLoading key=\"PageLoading\" {...props} />,\r\n    [ETypes.PROFILE]: <PageProfile key=\"PageProfile\" {...props} />,\r\n    [ETypes.CALCULATION]: <PageCalculation key=\"PageCalculation\" {...props} />,\r\n    [ETypes.ENGLISH]: <PageEnglish key=\"PageEnglish\" {...props} />,\r\n  });\r\n  const stack: ETypes[] = [];\r\n  const store = createStore({\r\n    currentPage: ETypes.LOADING,\r\n    results: [],\r\n    penalty: 0,\r\n    finished: false,\r\n    random: Util.shuffleGenerator(IMAGES.length),\r\n  });\r\n\r\n  const mapToProps = ({ currentPage }: any) => ({ currentPage });\r\n  const actions = (store: any, props: any) => ({\r\n    push: ({ currentPage }: any, next: ETypes) => {\r\n      stack.push(currentPage);\r\n      store.setState({ currentPage: next });\r\n    },\r\n    pop: (state: any) => {\r\n      const previous = stack.pop();\r\n      store.setState({ currentPage: previous });\r\n    },\r\n  });\r\n  const Content = connect(mapToProps, actions)((props: any) => pages(props)[props.currentPage as ETypes]);\r\n\r\n  export const Display: any = () => (\r\n    <Provider store={store}>\r\n      <Content />\r\n    </Provider>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Page, IPageProps } from '.';\r\nimport { connectDigit, connectEvaluation } from '../common/redux';\r\nimport { Asset } from '../common/asset';\r\nimport { Tracking } from '../common/tracking';\r\n\r\nconst FC: React.FC<IPageProps> = ({ push }) => {\r\n  React.useMemo(() => {\r\n    const t = Date.now();\r\n    Tracking.logEvent({ event: Tracking.ETypes.IMPRESSION });\r\n    (async () => {\r\n      const FONTS = [\r\n        {\r\n          family: 'Digit-Font',\r\n          source: 'fonts/HP001_5_hang_bold.ttf',\r\n        },\r\n        {\r\n          family: 'Letter-Font',\r\n          source: 'fonts/FineCollege.ttf',\r\n        },\r\n        {\r\n          family: 'SaucerBB',\r\n          source: 'fonts/SaucerBB.ttf',\r\n        },\r\n      ];\r\n\r\n      Promise.all(\r\n        FONTS.map(async ({ family, source }: any) => {\r\n          // @ts-ignore\r\n          const font = new FontFace(family, `url(${await Asset.fetch(source)})`);\r\n          await font.load();\r\n          // @ts-ignore\r\n          document.fonts.add(font);\r\n        })\r\n      )\r\n        .then(() => {\r\n          Tracking.logEvent({ event: Tracking.ETypes.ENGAGEMENT, loading: Date.now() - t });\r\n          push(Page.ETypes.PROFILE);\r\n        })\r\n        .catch(() => null);\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: '100vw',\r\n        height: '100vh',\r\n        backgroundColor: '#000000',\r\n      }}\r\n    >\r\n      <div\r\n        className=\"loader\"\r\n        // className=\"lds-dual-ring\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const PageLoading = connectEvaluation(connectDigit(FC));\r\n","import React from 'react';\r\n\r\ninterface ICompDigitProps extends React.SVGProps<SVGSVGElement> {\r\n  letter: string;\r\n  draggable: boolean;\r\n  onDragStart?: any;\r\n  onDragEnd?: any;\r\n}\r\n\r\nexport const CompLetter: React.FC<ICompDigitProps> = ({ letter, draggable, onDragStart, onDragEnd, ...props }) => {\r\n  return (\r\n    <div draggable={draggable} onDragStart={onDragStart} onDragEnd={onDragEnd} className=\"letter\">\r\n      {letter}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { connectLetter, connectEvaluation } from '../common/redux';\r\nimport { Util } from '../common/utils';\r\nimport { CompLetter } from './CompLetter';\r\n\r\ninterface ICompAlphabetProps extends React.SVGProps<SVGSVGElement> {\r\n  finished: boolean;\r\n  panel: any;\r\n  pickPanel: any;\r\n  updateScore: any;\r\n  onDragEnd?: any;\r\n}\r\n\r\nconst FC: React.FC<ICompAlphabetProps> = ({\r\n  finished,\r\n  panel,\r\n  pickPanel,\r\n  updateScore,\r\n  onDragEnd = (event: any) => {\r\n    if (panel) {\r\n      panel.innerHTML = '';\r\n      panel.appendChild(Util.cloneLetter(event.target, panel.valid, updateScore));\r\n    }\r\n  },\r\n}) => {\r\n  return (\r\n    <div style={{ display: 'flex', flexFlow: 'wrap', position: 'fixed', backgroundColor: 'transparent', zIndex: 999 }}>\r\n      {[...'ABCDEFGHIJKLMNOPQRSTUVWXYZ'].map((i) => (\r\n        <CompLetter\r\n          key={i}\r\n          letter={i}\r\n          draggable={!finished}\r\n          onDragStart={(event: any) => pickPanel(null)}\r\n          onDragEnd={onDragEnd}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const CompAlphabet = connectEvaluation(connectLetter(FC));\r\n","import React from 'react';\r\nimport { Asset } from '../common/asset';\r\nimport { IMAGES } from '../common/defines';\r\nimport { connectEvaluation } from '../common/redux';\r\n\r\ninterface ICompLetterPanelProps extends React.SVGProps<SVGSVGElement> {\r\n  session: number;\r\n  random: any;\r\n  onDragOver: any;\r\n  onDrop: any;\r\n}\r\n\r\nconst FC: React.FC<ICompLetterPanelProps> = ({ session, random, onDragOver, onDrop, ...props }) => {\r\n  const [asset, setAsset] = React.useState<string | null>(null);\r\n  React.useMemo(() => {\r\n    (async () => setAsset(await Asset.fetch(`images/${IMAGES[random.next().value]}`)))();\r\n  }, [session]);\r\n\r\n  return (\r\n    <div onDragOver={onDragOver} onDrop={onDrop}>\r\n      <div\r\n        className=\"letter-panel\"\r\n        style={{\r\n          backgroundImage: `url(${asset})`,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const CompLetterPanel = connectEvaluation(FC);\r\n","import React from 'react';\r\nimport { Page, IPageProps } from '.';\r\nimport { CompLetter } from '../components/CompLetter';\r\nimport { CompAlphabet } from '../components/CompAlphabet';\r\nimport { CompLetterPanel } from '../components/CompLetterPanel';\r\nimport { connectLetter } from '../common/redux';\r\n\r\ninterface IPageProfileProps extends IPageProps {\r\n  panel: any;\r\n  pickPanel: any;\r\n}\r\n\r\nconst FC: React.FC<IPageProfileProps> = ({ panel, push, pickPanel }) => {\r\n  const [username, setUsername] = React.useState('   ');\r\n  const currentUser = window.localStorage.getItem('username');\r\n  const formatter = (text: string, letter: string, index: number) => {\r\n    const letters = [...text];\r\n    letters[index] = letter;\r\n    return `  ${letters.join('').replace(/(\\s+)/g, ' ').trim()}  `;\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (currentUser) {\r\n      push(Page.ETypes.CALCULATION);\r\n    }\r\n  }, []);\r\n\r\n  if (currentUser) return null;\r\n  return (\r\n    <div>\r\n      <CompAlphabet\r\n        onDragEnd={(event: any) => {\r\n          if (!panel) return;\r\n          setUsername(formatter(username, event.target.innerText, panel.index));\r\n        }}\r\n      />\r\n      <div className=\"word\">\r\n        <div className=\"word-panel\" style={{ paddingTop: 100 }}>\r\n          {[...username].map((letter, i) =>\r\n            letter == ' ' ? (\r\n              <CompLetterPanel\r\n                key={i}\r\n                onDragOver={(event: any) => event.preventDefault()}\r\n                onDrop={(event: any) => {\r\n                  const panel = event.currentTarget;\r\n                  panel.index = i;\r\n                  pickPanel(panel);\r\n                }}\r\n              />\r\n            ) : (\r\n              <CompLetter\r\n                key={i}\r\n                letter={letter}\r\n                draggable={true}\r\n                onDragEnd={(event: any) => {\r\n                  setUsername(formatter(username, ' ', i));\r\n                }}\r\n              />\r\n            )\r\n          )}\r\n        </div>\r\n        <div\r\n          style={{\r\n            fontSize: 'x-large',\r\n            fontWeight: 'bold',\r\n            backgroundColor: 'yellow',\r\n            margin: 40,\r\n            padding: '16px 53px',\r\n            border: '4px solid blue',\r\n            cursor: 'pointer',\r\n            pointerEvents: 'auto',\r\n          }}\r\n          onClick={() => {\r\n            window.localStorage.setItem('username', username.toLowerCase().trim());\r\n            push(Page.ETypes.CALCULATION);\r\n          }}\r\n        >\r\n          SAVE\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const PageProfile = connectLetter(FC);\r\n","import React from 'react';\r\n\r\ninterface ICompDigitProps extends React.SVGProps<SVGSVGElement> {\r\n  digit: number;\r\n  draggable: boolean;\r\n  onDragStart?: any;\r\n  onDragEnd?: any;\r\n}\r\n\r\nexport const CompDigit: React.FC<ICompDigitProps> = (props) => {\r\n  const { digit, draggable, onDragStart, onDragEnd, style } = props;\r\n  return (\r\n    <div draggable={draggable} onDragStart={onDragStart} onDragEnd={onDragEnd} style={style} className=\"digit\">\r\n      {digit}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { connectEvaluation } from '../common/redux';\r\nimport { Asset } from '../common/asset';\r\nimport { Tracking } from '../common/tracking';\r\n\r\ninterface ICompEvaluationProps extends React.SVGProps<SVGSVGElement> {\r\n  finished: boolean;\r\n  results: any;\r\n  timer: any;\r\n  penalty: any;\r\n  newSession: any;\r\n  submit: any;\r\n}\r\n\r\nconst FC: React.FC<ICompEvaluationProps> = (props) => {\r\n  const { results, timer, penalty, newSession, finished, submit } = props;\r\n  const [asset, setAsset] = React.useState<string | null>(null);\r\n  const username = React.useMemo(() => {\r\n    (async () => setAsset(await Asset.fetch('reset.png')))();\r\n    return window.localStorage.getItem('username');\r\n  }, []);\r\n\r\n  const evaluation = () =>\r\n    Math.ceil(\r\n      results.reduce((mark: number, result: boolean) => {\r\n        return mark + (100 / results.length) * ~~result;\r\n      }, 0)\r\n    );\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        position: 'fixed',\r\n        top: 200,\r\n        right: 0,\r\n        width: 180,\r\n        paddingRight: 40,\r\n        textAlign: 'center',\r\n        zIndex: 999,\r\n      }}\r\n    >\r\n      <div className=\"user\">{username}</div>\r\n      <div\r\n        style={{\r\n          fontWeight: 'bold',\r\n          margin: 16,\r\n          cursor: 'pointer',\r\n          height: 96,\r\n          backgroundImage: `url(${asset})`,\r\n          backgroundSize: 'contain',\r\n          backgroundRepeat: 'no-repeat',\r\n          backgroundPosition: 'center',\r\n        }}\r\n        onClick={() => {\r\n          Tracking.logEvent({\r\n            event: Tracking.ETypes.REFRESH,\r\n            score: evaluation(),\r\n            playing: Date.now() - timer,\r\n          });\r\n          newSession();\r\n        }}\r\n      />\r\n\r\n      <div\r\n        style={{\r\n          fontFamily: 'SaucerBB',\r\n          fontSize: 80,\r\n          color: finished ? 'red' : 'grey',\r\n        }}\r\n      >\r\n        {100 + penalty}\r\n      </div>\r\n      <div\r\n        style={{\r\n          fontWeight: 'bold',\r\n          backgroundColor: 'yellow',\r\n          padding: 4,\r\n          border: '2px solid blue',\r\n          cursor: 'pointer',\r\n          pointerEvents: finished ? 'none' : 'auto',\r\n        }}\r\n        onClick={() => {\r\n          const score = evaluation();\r\n          Tracking.logEvent({ event: Tracking.ETypes.SUBMIT, score: score + penalty, playing: Date.now() - timer });\r\n          submit(score - 100);\r\n        }}\r\n      >\r\n        SUBMIT\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const CompEvaluation = connectEvaluation(FC);\r\n","import React from 'react';\r\nimport { Asset } from '../common/asset';\r\nimport { IMAGES } from '../common/defines';\r\nimport { connectEvaluation } from '../common/redux';\r\n\r\ninterface ICompDigitPanelProps extends React.SVGProps<SVGSVGElement> {\r\n  session: number;\r\n  random: any;\r\n  onDragOver: any;\r\n  onDrop: any;\r\n}\r\n\r\nconst FC: React.FC<ICompDigitPanelProps> = ({ session, random, onDragOver, onDrop, ...props }) => {\r\n  const [asset, setAsset] = React.useState<string | null>(null);\r\n  React.useMemo(() => {\r\n    (async () => setAsset(await Asset.fetch(`images/${IMAGES[random.next().value]}`)))();\r\n  }, [session]);\r\n\r\n  return (\r\n    <div onDragOver={onDragOver} onDrop={onDrop}>\r\n      <div\r\n        className=\"digit-panel\"\r\n        style={{\r\n          backgroundImage: `url(${asset})`,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const CompDigitPanel = connectEvaluation(FC);\r\n","import React from 'react';\r\nimport { connectDigit } from '../common/redux';\r\nimport { CompDigit } from './CompDigit';\r\nimport { CompDigitPanel } from './CompDigitPanel';\r\n\r\ninterface ICompOperandProps extends React.SVGProps<SVGSVGElement> {\r\n  value: string;\r\n  mask?: string;\r\n  targetPanel: any;\r\n}\r\n\r\nconst FC: React.FC<ICompOperandProps> = ({ value, mask = value, targetPanel, ...props }) => {\r\n  const number = React.useRef<HTMLDivElement>(null);\r\n  value = ('x'.repeat(mask.length) + value).slice(-mask.length);\r\n  // console.log({ value, mask });\r\n\r\n  return (\r\n    <div ref={number} style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n      {[...mask].map((digit, i) =>\r\n        isFinite(+digit) ? (\r\n          <CompDigit key={i} digit={+digit} draggable={false} />\r\n        ) : (\r\n          <CompDigitPanel\r\n            key={i}\r\n            onDragOver={(event: any) => event.preventDefault()}\r\n            onDrop={(event: any) =>\r\n              targetPanel({\r\n                validDigit: value[i],\r\n                panel: event.currentTarget,\r\n              })\r\n            }\r\n          />\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const CompNumber = connectDigit(FC);\r\n","import React from 'react';\r\nimport { connectDigit, connectEvaluation } from '../common/redux';\r\nimport { CompDigit } from './CompDigit';\r\nimport { CompDigitPanel } from './CompDigitPanel';\r\n\r\nexport interface IOperand {\r\n  value: string;\r\n  text: string;\r\n  mask: string;\r\n}\r\n\r\ninterface ICompOperandProps extends React.SVGProps<SVGSVGElement> {\r\n  finished: boolean;\r\n  operand: any;\r\n  selectPanel: any;\r\n  updateResult: any;\r\n}\r\n\r\nconst FC: React.FC<ICompOperandProps> = ({ id, finished, operand, selectPanel, updateResult }) => {\r\n  const [_, refresh] = React.useState(0);\r\n  const number = React.useRef<HTMLDivElement>(null);\r\n  const { value, text, mask } = operand;\r\n  const panel = (digit: string, i: number) => {\r\n    if (isFinite(+digit)) {\r\n      return <CompDigit key={i} digit={+digit} draggable={false} />;\r\n    }\r\n    if (digit == 'z') {\r\n      return <div key={i} className=\"digit-panel\" style={{ borderColor: 'black' }} />;\r\n    }\r\n    if (text[i] == ' ') {\r\n      return (\r\n        <CompDigitPanel\r\n          key={i}\r\n          onDragOver={(event: any) => event.preventDefault()}\r\n          onDrop={(event: any) =>\r\n            selectPanel({\r\n              operand,\r\n              index: i,\r\n            })\r\n          }\r\n        />\r\n      );\r\n    }\r\n    const valueText = (' '.repeat(text.length) + String(value)).slice(-text.length);\r\n    return (\r\n      <CompDigit\r\n        key={i}\r\n        digit={+text[i]}\r\n        style={{\r\n          background: valueText[i] === text[i] ? 'green' : 'red',\r\n        }}\r\n        draggable={!finished}\r\n        onDragEnd={(event: any) => {\r\n          operand.text = text.replace(new RegExp(`(.{${i}})(.)`, 'i'), '$1 ');\r\n          refresh(Math.random());\r\n        }}\r\n      />\r\n    );\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    (async () => updateResult(id, value === text))();\r\n  });\r\n\r\n  return (\r\n    <div ref={number} style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n      {[...mask].map(panel)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const CompOperand = connectEvaluation(connectDigit(FC));\r\n","import React from 'react';\r\nimport { connectEvaluation } from '../common/redux';\r\nimport { CompNumber } from './CompNumber';\r\nimport { IOperand, CompOperand } from './CompOperand';\r\n\r\ninterface ICompAdditionProps extends React.SVGProps<SVGSVGElement> {\r\n  operands: number[];\r\n}\r\n\r\nconst FC: React.FC<ICompAdditionProps> = ({ id, operands }) => {\r\n  const [operandFirst, operandSecond] = operands;\r\n  const [operator, result] = React.useMemo(() => {\r\n    const operandize = (value: string, maxdigit: number, trail: number) => {\r\n      const ndigit = Math.max(value.length - trail, maxdigit);\r\n      return {\r\n        value: (' '.repeat(ndigit) + value).slice(-ndigit) + '0'.repeat(trail),\r\n        text: ' '.repeat(ndigit) + '0'.repeat(trail),\r\n        mask: 'x'.repeat(ndigit) + 'z'.repeat(trail),\r\n      };\r\n    };\r\n\r\n    const operator = operandFirst > operandSecond ? '-' : '+';\r\n    const result = {\r\n      '+': operandFirst + operandSecond,\r\n      '-': operandFirst - operandSecond,\r\n    }[operator];\r\n    return [operator, operandize(String(result), 3, 0)];\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"calculation\" style={{ background: 'transparent' }}>\r\n      <CompNumber value={String(operandFirst)} />\r\n      <div className=\"operator\">{operator}</div>\r\n      <CompNumber value={String(operandSecond)} />\r\n      <div className=\"horizontal-line\">==</div>\r\n      <CompOperand id={id} operand={result} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const CompAddition = connectEvaluation(FC);\r\n","import React from 'react';\r\nimport { connectEvaluation } from '../common/redux';\r\nimport { CompNumber } from './CompNumber';\r\nimport { IOperand, CompOperand } from './CompOperand';\r\n\r\ninterface ICompMultiplicationProps extends React.SVGProps<SVGSVGElement> {\r\n  operands: number[];\r\n}\r\n\r\nconst FC: React.FC<ICompMultiplicationProps> = ({ id, operands }) => {\r\n  const summandFirst = React.useRef<HTMLDivElement>(null);\r\n  const summandSecond = React.useRef<HTMLDivElement>(null);\r\n  const sum = React.useRef<HTMLDivElement>(null);\r\n  const [operandFirst, operandSecond] = operands;\r\n\r\n  const [factors, product] = React.useMemo(() => {\r\n    const operandize = (value: string, maxdigit: number, trail: number) => {\r\n      const ndigit = Math.max(value.length - trail, maxdigit);\r\n      return {\r\n        value: (' '.repeat(ndigit) + value).slice(-ndigit) + '0'.repeat(trail),\r\n        text: ' '.repeat(ndigit) + '0'.repeat(trail),\r\n        mask: 'x'.repeat(ndigit) + 'z'.repeat(trail),\r\n      };\r\n    };\r\n    const factors: IOperand[] = [...String(operandFirst)].map<IOperand>((_, i) => {\r\n      const value = String(operandSecond * ~~((operandFirst / 10 ** i) % 10));\r\n      const ndigit = Math.max(value.length - i, 2);\r\n      return operandize(value, ndigit, i);\r\n    });\r\n    return [factors, operandize(String(operandFirst * operandSecond), 3, 0)];\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"calculation\" style={{ background: 'transparent' }}>\r\n      <CompNumber value={String(operandFirst)} />\r\n      <div className=\"operator\">&#x00d7;</div>\r\n      <CompNumber value={String(operandSecond)} />\r\n      <div className=\"horizontal-line\">==</div>\r\n      {factors.map((factor: IOperand, i: number) => (\r\n        <CompOperand key={i} id={Number(id) + i} operand={factor} />\r\n      ))}\r\n      <div className=\"horizontal-line\">==</div>\r\n      <CompOperand id={Number(id) + 2} operand={product} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const CompMultiplication = connectEvaluation(FC);\r\n","import React, { SVGProps, useState, useEffect } from 'react';\r\nimport { connect } from 'redux-zero/react';\r\nimport Draggable from 'react-draggable';\r\nimport { IPageProps } from '.';\r\nimport { CompDigit } from '../components/CompDigit';\r\nimport { CompEvaluation } from '../components/CompEvaluation';\r\nimport { CompAddition } from '../components/CompAddition';\r\nimport { CompMultiplication } from '../components/CompMultiplication';\r\nimport { connectDigit, connectEvaluation } from '../common/redux';\r\nimport { Util } from '../common/utils';\r\nimport { SIZE, MIN, MAX, MULTIPLY } from '../common/defines';\r\n\r\ninterface ICalculationProps extends IPageProps {\r\n  finished: boolean;\r\n  session: number;\r\n  panel: any;\r\n  selectPanel: any;\r\n  updateScore: any;\r\n  updateTimer: any;\r\n}\r\n\r\nconst FC: React.FC<ICalculationProps> = (props) => {\r\n  const [_, refresh] = React.useState(0);\r\n  const { finished, session, panel, selectPanel, updateScore, updateTimer } = props;\r\n  const problems = React.useMemo(() => {\r\n    let offset = 0;\r\n    return [...Array(SIZE)].map((_, i) => {\r\n      const multiply = i < MULTIPLY;\r\n      const problem = {\r\n        operands: [Util.random(MIN, MAX), multiply ? Util.random(2, 10) : Util.random(MIN, MAX)],\r\n        multiply,\r\n        offset,\r\n      };\r\n      offset += ~~multiply * 2 + 1;\r\n      return problem;\r\n    });\r\n  }, [session]);\r\n\r\n  React.useEffect(() => {\r\n    updateTimer();\r\n  }, [session]);\r\n\r\n  return (\r\n    <div key={session}>\r\n      <div style={{ display: 'flex', position: 'fixed', backgroundColor: 'transparent', zIndex: 999 }}>\r\n        {[...Array(10)].map((_, i) => (\r\n          <CompDigit\r\n            key={i}\r\n            digit={i}\r\n            draggable={!finished}\r\n            onDragStart={(event: any) => selectPanel(null)}\r\n            onDragEnd={(event: any) => {\r\n              if (panel) {\r\n                const { index, operand } = panel;\r\n                operand.text = operand.text.replace(new RegExp(`(.{${index}})(.)`, 'i'), `$1${event.target.innerText}`);\r\n                updateScore(~~(operand.value[index] === operand.text[index]) - 1);\r\n                refresh(Math.random());\r\n              }\r\n            }}\r\n          />\r\n        ))}\r\n      </div>\r\n      <CompEvaluation />\r\n      <div className=\"content-panel\">\r\n        <div style={{ display: 'flex', flexFlow: 'wrap', backgroundColor: 'linen' }}>\r\n          {problems.map(({ operands, multiply, offset }, i) => {\r\n            return multiply ? (\r\n              <CompMultiplication key={i} id={offset} operands={operands} />\r\n            ) : (\r\n              <CompAddition key={i} id={offset} operands={operands} />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const PageCalculation = connectEvaluation(connectDigit(FC));\r\n","import React from 'react';\r\nimport { connectEvaluation } from '../common/redux';\r\n\r\ninterface ICompSpeakerProps extends React.SVGProps<SVGSVGElement> {\r\n  word: string;\r\n}\r\n\r\nexport const CompSpeaker: React.FC<ICompSpeakerProps> = (props) => {\r\n  const { word } = props;\r\n  const audio = React.useMemo(() => {\r\n    const wordIndex = `${word}${'_'.repeat(word.length)}`;\r\n    const audioEl = document.createElement('audio');\r\n    const sourceEl = document.createElement('source');\r\n    sourceEl.src =\r\n      `https://www.oxfordlearnersdictionaries.com/media/american_english/us_pron/` +\r\n      `/${wordIndex.slice(0, 1)}` +\r\n      `/${wordIndex.slice(0, 3)}` +\r\n      `/${wordIndex.slice(0, 5)}` +\r\n      `/${word}__us_1.mp3`;\r\n    sourceEl.type = 'audio/mpeg';\r\n    audioEl.appendChild(sourceEl);\r\n    return audioEl;\r\n  }, [word]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: 180,\r\n        textAlign: 'center',\r\n        zIndex: 999,\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          fontWeight: 'bold',\r\n          margin: 16,\r\n          cursor: 'pointer',\r\n          height: 96,\r\n          backgroundImage: `url(${process.env.PUBLIC_URL}/speaker.png)`,\r\n          backgroundSize: 'contain',\r\n          backgroundRepeat: 'no-repeat',\r\n          backgroundPosition: 'center',\r\n        }}\r\n        onClick={() => audio.play()}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { connectEvaluation } from '../common/redux';\r\n\r\ndeclare var MediaRecorder: any;\r\ninterface ICompRecorderProps extends React.SVGProps<SVGSVGElement> {\r\n  word: string;\r\n}\r\n\r\nexport const CompRecorder: React.FC<ICompRecorderProps> = (props) => {\r\n  const [recording, setRecording] = React.useState(false);\r\n  const { word } = props;\r\n  const recorderEl = React.useMemo(() => {\r\n    async function initialize() {\r\n      const chunks: any[] = [];\r\n\r\n      const blobToBase64 = async (blob: any): Promise<string> =>\r\n        new Promise((resolve) => {\r\n          var reader = new FileReader();\r\n          reader.onload = function () {\r\n            var dataUrl = reader.result as string;\r\n            var [_, base64] = dataUrl?.split(',');\r\n            resolve(base64);\r\n          };\r\n          reader.readAsDataURL(blob);\r\n        });\r\n\r\n      const stream: MediaStream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n      const recorder = new MediaRecorder(\r\n        stream\r\n        // { mimeType: 'video/webm; codecs=vp9' }\r\n      );\r\n      recorder.ondataavailable = async (e: any) => {\r\n        chunks.push(e.data);\r\n        if (recorder.state === 'inactive') {\r\n          try {\r\n            const blob = new Blob(chunks, { type: 'audio/webm' });\r\n            // audioEl.src = URL.createObjectURL(blob);\r\n            // audioEl.play();\r\n\r\n            const data = await blobToBase64(blob);\r\n            // console.log({ chunks, data });\r\n            const res = await fetch('https://speech.googleapis.com/v1/speech:recognize', {\r\n              method: 'POST',\r\n              headers: {\r\n                'Content-Type': 'application/json',\r\n                key: 'AIzaSyAWEriX0ahrPBMHozN9zCfqxuyCwxVBFhs',\r\n              },\r\n              body: JSON.stringify({\r\n                audio: {\r\n                  content: data,\r\n                },\r\n                config: {\r\n                  enableAutomaticPunctuation: false,\r\n                  encoding: 'LINEAR16',\r\n                  languageCode: 'en-US',\r\n                  sampleRateHertz: 16000,\r\n                  maxAlternatives: 30,\r\n                },\r\n              }),\r\n            });\r\n            console.log({ res });\r\n          } catch (error) {\r\n            console.log(error);\r\n          }\r\n        }\r\n      };\r\n      recorder.onstop = () => (chunks.length = 0);\r\n      return recorder;\r\n    }\r\n    const audioEl = document.createElement('audio');\r\n    // const sourceEl = document.createElement('source');\r\n    // sourceEl.type = 'audio/webm';\r\n    // audioEl.appendChild(sourceEl);\r\n    return initialize();\r\n  }, [word]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: 180,\r\n        textAlign: 'center',\r\n        zIndex: 999,\r\n      }}\r\n    >\r\n      <div\r\n        className=\"button\"\r\n        style={{\r\n          backgroundImage: `url(${process.env.PUBLIC_URL}/${recording ? 'recording' : 'recorder'}.png)`,\r\n        }}\r\n        onClick={() =>\r\n          recorderEl.then((recorder) => {\r\n            setRecording(recorder.start() || true);\r\n            setTimeout(() => setRecording(recorder.stop() || false), 2000);\r\n          })\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { connectLetter, connectEvaluation } from '../common/redux';\r\nimport { CompLetterPanel } from './CompLetterPanel';\r\nimport { CompSpeaker } from './CompSpeaker';\r\nimport { CompRecorder } from './CompRecorder';\r\n\r\ninterface ICompWordProps extends React.SVGProps<SVGSVGElement> {\r\n  word: string;\r\n  pickPanel: any;\r\n}\r\n\r\nconst FC: React.FC<ICompWordProps> = ({ word, pickPanel }) => {\r\n  return (\r\n    <div className=\"word\">\r\n      <div style={{ display: 'flex' }}>\r\n        <div\r\n          className=\"word-picture\"\r\n          style={{\r\n            backgroundImage: `url(${process.env.PUBLIC_URL}/wild-animals/${word}-150x150.png)`,\r\n          }}\r\n        />\r\n        <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n          <CompSpeaker word={word} />\r\n          <CompRecorder word={word} />\r\n        </div>\r\n      </div>\r\n      <div className=\"word-panel\">\r\n        {[...word.toUpperCase()].map((letter, i) => (\r\n          <CompLetterPanel\r\n            key={i}\r\n            onDragOver={(event: any) => event.preventDefault()}\r\n            onDrop={(event: any) => {\r\n              const panel = event.currentTarget;\r\n              panel.valid = letter;\r\n              pickPanel(panel);\r\n            }}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const CompWord = connectEvaluation(connectLetter(FC));\r\n","import React, { SVGProps, useState, useEffect } from 'react';\r\nimport { connect } from 'redux-zero/react';\r\nimport Draggable from 'react-draggable';\r\nimport { IPageProps } from '.';\r\nimport { CompLetter } from '../components/CompLetter';\r\nimport { CompAlphabet } from '../components/CompAlphabet';\r\nimport { CompWord } from '../components/CompWord';\r\nimport { CompEvaluation } from '../components/CompEvaluation';\r\nimport { CompAddition } from '../components/CompAddition';\r\nimport { connectDigit, connectEvaluation } from '../common/redux';\r\nimport { Util } from '../common/utils';\r\nimport { WILD_ANIMALS } from '../common/defines';\r\nimport logo from './draggable_4.svg';\r\n\r\ninterface IPageEnglishProps extends IPageProps {\r\n  finished: boolean;\r\n  session: number;\r\n  digitPanel: any;\r\n  targetPanel: any;\r\n  updateScore: any;\r\n}\r\n\r\nconst FC: React.FC<IPageEnglishProps> = (props) => {\r\n  const [_, refresh] = React.useState(0);\r\n  const { finished, session, digitPanel, targetPanel, updateScore } = props;\r\n  const word = React.useMemo(() => WILD_ANIMALS[Util.random(0, WILD_ANIMALS.length)], [session]);\r\n  return (\r\n    <div key={session}>\r\n      <CompAlphabet />\r\n      <CompEvaluation />\r\n      <CompWord word={word} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const PageEnglish = connectEvaluation(connectDigit(FC));\r\n","import { Page } from './pages';\nimport './App.css';\n\nfunction App() {\n  return <Page.Display />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './DragDropTouch';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}